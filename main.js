// Generated by Haxe 4.0.0-rc.1+64fc139bb
(function ($hx_exports, $global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class EReg {
	constructor(r,opt) {
		this.r = new RegExp(r,opt.split("u").join(""));
	}
	match(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	matched(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
}
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
Object.assign(EReg.prototype, {
	__class__: EReg
});
class HxOverrides {
	static dateStr(date) {
		var m = date.getMonth() + 1;
		var d = date.getDate();
		var h = date.getHours();
		var mi = date.getMinutes();
		var s = date.getSeconds();
		return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
	}
	static cca(s,index) {
		var x = s.charCodeAt(index);
		if(x != x) {
			return undefined;
		}
		return x;
	}
	static substr(s,pos,len) {
		if(len == null) {
			len = s.length;
		} else if(len < 0) {
			if(pos == 0) {
				len = s.length + len;
			} else {
				return "";
			}
		}
		return s.substr(pos,len);
	}
	static remove(a,obj) {
		var i = a.indexOf(obj);
		if(i == -1) {
			return false;
		}
		a.splice(i,1);
		return true;
	}
	static iter(a) {
		return { cur : 0, arr : a, hasNext : function() {
			return this.cur < this.arr.length;
		}, next : function() {
			return this.arr[this.cur++];
		}};
	}
}
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
class org_tamina_html_component_HTMLApplication {
	constructor() {
	}
	loadComponents() {
		var tag = org_tamina_html_component_HTMLApplication.get_componentsXTagList().keys();
		while(tag.hasNext()) {
			var tag1 = tag.next();
			var _this = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
			var name = __map_reserved[tag1] != null ? _this.getReserved(tag1) : _this.h[tag1];
			var componentClass = $hxClasses[name];
			window.customElements.define(tag1,componentClass);
		}
	}
	static get_componentsXTagList() {
		if(org_tamina_html_component_HTMLApplication.componentsXTagList == null) {
			org_tamina_html_component_HTMLApplication.componentsXTagList = new haxe_ds_StringMap();
		}
		return org_tamina_html_component_HTMLApplication.componentsXTagList;
	}
	static createInstance(type) {
		var className = type.__name__;
		var tag = org_tamina_html_component_HTMLApplication.getTagByClassName(className);
		return window.document.createElement(tag);
	}
	static isCustomElement(nodeName) {
		var this1 = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
		var key = nodeName.toLowerCase();
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.existsReserved(key);
		} else {
			return _this.h.hasOwnProperty(key);
		}
	}
	static getTagByClassName(className) {
		var result = "";
		var tag = org_tamina_html_component_HTMLApplication.get_componentsXTagList().keys();
		while(tag.hasNext()) {
			var tag1 = tag.next();
			var _this = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
			var value = __map_reserved[tag1] != null ? _this.getReserved(tag1) : _this.h[tag1];
			if(value == className) {
				result = tag1;
				break;
			}
		}
		return result;
	}
}
$hxClasses["org.tamina.html.component.HTMLApplication"] = org_tamina_html_component_HTMLApplication;
org_tamina_html_component_HTMLApplication.__name__ = "org.tamina.html.component.HTMLApplication";
org_tamina_html_component_HTMLApplication.__properties__ = {get_componentsXTagList: "get_componentsXTagList"};
Object.assign(org_tamina_html_component_HTMLApplication.prototype, {
	__class__: org_tamina_html_component_HTMLApplication
});
class Main extends org_tamina_html_component_HTMLApplication {
	constructor() {
		super();
	}
	build() {
		org_tamina_display_BitmapData.getMimeType("");
		org_tamina_display_ColorMatrix.get_BANDW_MATRIX();
		new org_tamina_events_EventDispatcher();
		new org_tamina_geom_Junction();
		new org_tamina_io_ImageLoader();
		org_tamina_log_QuickLogger.debug("");
		new org_tamina_net_XMLLoader();
		new org_tamina_net_AssetLoader();
		org_tamina_utils_ClassUtils.expose(null,"");
		org_tamina_utils_ColorUtils.invert("#FFFFFF");
		org_tamina_utils_DateUtils.toFrenchString(new Date());
		org_tamina_utils_HTMLUtils.getElementById(window.document.head,"test");
		if(!isNaN(0)) {
			var a = 10;
			var n = 0;
			var t = 1;
			var r = 0;
			while(true) {
				if((n & 1) != 0) {
					t = a * t;
				}
				n >>= 1;
				if(n == 0) {
					r = t;
					break;
				} else {
					a *= a;
				}
			}
			var t1 = r;
			var s = Std.string((0 * t1 | 0) / t1);
			var i = s.indexOf(".");
			if(i != -1) {
				var _g = HxOverrides.substr(s,i + 1,null).length;
				var _g1 = 0;
				while(_g < _g1) {
					var i1 = _g++;
					s += "0";
				}
			} else {
				s += ".";
				var _g2 = 0;
				var _g11 = 0;
				while(_g2 < _g11) {
					var i2 = _g2++;
					s += "0";
				}
			}
		}
		org_tamina_utils_ObjectUtils.merge({ },{ });
		org_tamina_utils_UID.getUID();
		var url = new org_tamina_net_URL("https://fr.wikipedia.org/wiki/Red_Hat#/media/File:RedHat.svg");
		console.log("./Main.hx:82:",url.get_scheme());
		var l = new org_tamina_io_ImageLoader();
		l.load(url).then(function(image) {
			window.document.body.appendChild(image);
		})["catch"](function(error) {
			console.log("./Main.hx:87:",error.message);
		});
		var xmlLoader = new org_tamina_net_XMLLoader();
		xmlLoader.load(new org_tamina_net_URL("http://www.bouletcorp.com/feed/")).then(function(value) {
			console.log("./Main.hx:91:",value);
			return;
		})["catch"](function(value1) {
			console.log("./Main.hx:91:",value1);
			return;
		});
		var assetListLoader = new org_tamina_net_AssetsSequenceLoader();
		assetListLoader.load([new org_tamina_net_AssetURL("https://code.jquery.com/jquery-3.2.1.slim.min.js"),new org_tamina_net_AssetURL("https://code.createjs.com/easeljs-0.8.2.min.js")]).then(function(value2) {
			console.log("./Main.hx:94:",value2);
		})["catch"](function(value3) {
			console.log("./Main.hx:94:",value3);
		});
		var compositeLoader = new org_tamina_net_AssetCompositeLoader();
		var myComponent = org_tamina_html_component_HTMLApplication.createInstance(test_html_view_TestComponent);
		myComponent.addEventListener("creationComplete",$bind(this,this.myComponent_creationCompleteHandler));
		window.document.addEventListener("DOMContentLoaded",function(event) {
			return window.document.body.appendChild(myComponent);
		});
		org_tamina_log_QuickLogger.warn("log");
		var request = new GetAlbumsRequest();
		request.setHeaders(new GetAlbumsRequestHeader("fr_FR","F7CF4DD5-ECBF-4CD6-9E7D-29C513C17401"));
		request.send().then(function(response) {
			console.log("./Main.hx:106:",response.ResponseHeader);
		})["catch"](function(error1) {
			console.log("./Main.hx:108:",error1.message);
		});
	}
	myComponent_creationCompleteHandler(evt) {
		console.log("./Main.hx:113:","hophophop");
	}
	static init(translations) {
		org_tamina_i18n_LocalizationManager.get_instance().setTranslations(translations);
	}
	static main() {
		Main._instance = new Main();
		Main._instance.loadComponents();
		Main._instance.build();
	}
}
$hxClasses["Main"] = $hx_exports["Main"] = Main;
Main.__name__ = "Main";
Main.__super__ = org_tamina_html_component_HTMLApplication;
Object.assign(Main.prototype, {
	__class__: Main
});
class org_tamina_net_BaseRequest {
	constructor(remoteMethod,method,contentType) {
		if(contentType == null) {
			contentType = "application/json";
		}
		if(method == null) {
			method = "POST";
		}
		this._id = org_tamina_utils_UID.getUID();
		this._contentType = contentType;
		this._httpRequest = new XMLHttpRequest();
		this._httpRequest.upload.addEventListener("progress",$bind(this,this.uploadHandler));
		this._httpRequest.addEventListener("progress",$bind(this,this.progressHandler));
		this._httpRequest.open(method,remoteMethod,true);
		this._httpRequest.setRequestHeader("Content-Type",this._contentType + "; charset=utf-8");
	}
	setHeaders(header) {
		this._header = header;
	}
	get_id() {
		return this._id;
	}
	send() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis._httpRequest.addEventListener("load",function(result) {
				var req = result.target;
				if(req.status == 200) {
					try {
						var p = JSON.parse(req.response);
						resolve(p);
					} catch( e ) {
						var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
						if(((e1) instanceof Error)) {
							org_tamina_log_QuickLogger.error(e1.message);
							reject(new Error("Class Mapping Error : Unexpected response Class " + Std.string(req.response)));
						} else {
							throw e;
						}
					}
				} else {
					reject(new Error("HTTP Error : Unexpected status code " + req.status));
				}
			});
			_gthis._httpRequest.addEventListener("error",function(event) {
				var req1 = event.target;
				var c = _gthis == null ? null : js_Boot.getClass(_gthis);
				var error = new Error(c.__name__ + " Request Error");
				org_tamina_log_QuickLogger.error(error.message);
				reject(error);
			});
			_gthis._httpRequest.send(JSON.stringify(_gthis.getRequestContent()));
		});
	}
	abort() {
		this._httpRequest.abort();
	}
	uploadHandler(progress) {
		org_tamina_log_QuickLogger.info("uploading " + progress.loaded + "/" + progress.total);
	}
	getRequestContent() {
		return this._header;
	}
	progressHandler(progress) {
		org_tamina_log_QuickLogger.info("downloading " + progress.loaded + "/" + progress.total);
	}
}
$hxClasses["org.tamina.net.BaseRequest"] = org_tamina_net_BaseRequest;
org_tamina_net_BaseRequest.__name__ = "org.tamina.net.BaseRequest";
Object.assign(org_tamina_net_BaseRequest.prototype, {
	__class__: org_tamina_net_BaseRequest
	,__properties__: {get_id: "get_id"}
});
class GetAlbumsRequest extends org_tamina_net_BaseRequest {
	constructor() {
		super("http://api.heidi.tech/Api.svc/GetAlbums","POST","application/json");
	}
}
$hxClasses["GetAlbumsRequest"] = GetAlbumsRequest;
GetAlbumsRequest.__name__ = "GetAlbumsRequest";
GetAlbumsRequest.__super__ = org_tamina_net_BaseRequest;
Object.assign(GetAlbumsRequest.prototype, {
	__class__: GetAlbumsRequest
});
class GetAlbumsRequestHeader {
	constructor(locale,token) {
		this.Locale = locale;
		this.Token = token;
	}
}
$hxClasses["GetAlbumsRequestHeader"] = GetAlbumsRequestHeader;
GetAlbumsRequestHeader.__name__ = "GetAlbumsRequestHeader";
Object.assign(GetAlbumsRequestHeader.prototype, {
	__class__: GetAlbumsRequestHeader
});
class GetAlbumsRequestResponse {
}
$hxClasses["GetAlbumsRequestResponse"] = GetAlbumsRequestResponse;
GetAlbumsRequestResponse.__name__ = "GetAlbumsRequestResponse";
Object.assign(GetAlbumsRequestResponse.prototype, {
	__class__: GetAlbumsRequestResponse
});
Math.__name__ = "Math";
class Reflect {
	static field(o,field) {
		try {
			return o[field];
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			return null;
		}
	}
	static getProperty(o,field) {
		var tmp;
		if(o == null) {
			return null;
		} else {
			var tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				return o[tmp]();
			} else {
				return o[field];
			}
		}
	}
	static setProperty(o,field,value) {
		var tmp;
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["set_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			o[tmp](value);
		} else {
			o[field] = value;
		}
	}
	static fields(o) {
		var a = [];
		if(o != null) {
			var hasOwnProperty = Object.prototype.hasOwnProperty;
			for( var f in o ) {
			if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
				a.push(f);
			}
			}
		}
		return a;
	}
}
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
	static parseInt(x) {
		var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
		if(isNaN(v)) {
			return null;
		}
		return v;
	}
}
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
class StringTools {
	static isSpace(s,pos) {
		var c = HxOverrides.cca(s,pos);
		if(!(c > 8 && c < 14)) {
			return c == 32;
		} else {
			return true;
		}
	}
	static ltrim(s) {
		var l = s.length;
		var r = 0;
		while(r < l && StringTools.isSpace(s,r)) ++r;
		if(r > 0) {
			return HxOverrides.substr(s,r,l - r);
		} else {
			return s;
		}
	}
	static rtrim(s) {
		var l = s.length;
		var r = 0;
		while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
		if(r > 0) {
			return HxOverrides.substr(s,0,l - r);
		} else {
			return s;
		}
	}
	static trim(s) {
		return StringTools.ltrim(StringTools.rtrim(s));
	}
	static replace(s,sub,by) {
		return s.split(sub).join(by);
	}
}
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
class haxe_IMap {
}
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
class haxe_Timer {
	constructor(time_ms) {
		var me = this;
		this.id = setInterval(function() {
			me.run();
		},time_ms);
	}
	run() {
	}
}
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
Object.assign(haxe_Timer.prototype, {
	__class__: haxe_Timer
});
class haxe_ds_StringMap {
	constructor() {
		this.h = { };
	}
	setReserved(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	getReserved(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	existsReserved(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	remove(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	keys() {
		return HxOverrides.iter(this.arrayKeys());
	}
	arrayKeys() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
}
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_StringMap.prototype, {
	__class__: haxe_ds_StringMap
});
class haxe_rtti_Meta {
	static getMeta(t) {
		return t.__meta__;
	}
	static getFields(t) {
		var meta = haxe_rtti_Meta.getMeta(t);
		if(meta == null || meta.fields == null) {
			return { };
		} else {
			return meta.fields;
		}
	}
}
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
class js__$Boot_HaxeError extends Error {
	constructor(val) {
		super();
		this.val = val;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,js__$Boot_HaxeError);
		}
	}
}
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.__super__ = Error;
Object.assign(js__$Boot_HaxeError.prototype, {
	__class__: js__$Boot_HaxeError
});
class js_Boot {
	static getClass(o) {
		if(((o) instanceof Array) && o.__enum__ == null) {
			return Array;
		} else {
			var cl = o.__class__;
			if(cl != null) {
				return cl;
			}
			var name = js_Boot.__nativeClassName(o);
			if(name != null) {
				return js_Boot.__resolveNativeClass(name);
			}
			return null;
		}
	}
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		var t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				var e = $hxEnums[o.__enum__];
				var n = e.__constructs__[o._hx_index];
				var con = e[n];
				if(con.__params__) {
					s += "\t";
					var tmp = n + "(";
					var _g = [];
					var _g1 = 0;
					var _g2 = con.__params__;
					while(_g1 < _g2.length) {
						var p = _g2[_g1];
						++_g1;
						_g.push(js_Boot.__string_rec(o[p],s));
					}
					return tmp + _g.join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				var l = o.length;
				var i;
				var str = "[";
				s += "\t";
				var _g3 = 0;
				var _g11 = l;
				while(_g3 < _g11) {
					var i1 = _g3++;
					str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
				}
				str += "]";
				return str;
			}
			var tostr;
			try {
				tostr = o.toString;
			} catch( e1 ) {
				var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				var s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			var k = null;
			var str1 = "{\n";
			s += "\t";
			var hasp = o.hasOwnProperty != null;
			for( var k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str1.length != 2) {
				str1 += ", \n";
			}
			str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str1 += "\n" + s + "}";
			return str1;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
	static __nativeClassName(o) {
		var name = js_Boot.__toStr.call(o).slice(8,-1);
		if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
			return null;
		}
		return name;
	}
	static __resolveNativeClass(name) {
		return $global[name];
	}
}
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
class org_tamina_display_BitmapData {
	static toDataUrl(source,width,height,type) {
		var result = "";
		var tempCanvas = window.document.createElement("canvas");
		tempCanvas.width = width;
		tempCanvas.height = height;
		var tempContext = tempCanvas.getContext("2d",null);
		tempContext.drawImage(source,0,0,source.width,source.height,0,0,width,height);
		result = tempCanvas.toDataURL(type);
		tempContext = null;
		try {
			tempCanvas.remove();
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			tempCanvas = null;
		}
		return result;
	}
	static imageToCanvas(source,width,height) {
		if(height == null) {
			height = -1;
		}
		if(width == null) {
			width = -1;
		}
		var result = window.document.createElement("canvas");
		if(width == -1) {
			width = source.naturalWidth;
			height = source.naturalHeight;
		}
		result.width = width;
		result.height = height;
		var context = result.getContext("2d",null);
		context.drawImage(source,0,0,source.naturalWidth,source.naturalHeight,0,0,width,height);
		context = null;
		return result;
	}
	static copyCanvas(source,width,height) {
		var result = window.document.createElement("canvas");
		result.width = width;
		result.height = height;
		var context = result.getContext("2d",null);
		context.drawImage(source,0,0,source.width,source.height,0,0,width,height);
		context = null;
		return result;
	}
	static getMimeType(base64) {
		return base64.substring(base64.indexOf(":") + 1,base64.indexOf(";"));
	}
	static getMimeTypeFromURL(url) {
		var result = "";
		switch(url.get_extension().toLowerCase()) {
		case "bmp":
			result = "image/bmp";
			break;
		case "gif":
			result = "image/gif";
			break;
		case "jpeg":
			result = "image/jpeg";
			break;
		case "jpg":
			result = "image/jpeg";
			break;
		case "png":
			result = "image/png";
			break;
		case "tiff":
			result = "image/tiff";
			break;
		case "webp":
			result = "image/webp";
			break;
		}
		return result;
	}
}
$hxClasses["org.tamina.display.BitmapData"] = org_tamina_display_BitmapData;
org_tamina_display_BitmapData.__name__ = "org.tamina.display.BitmapData";
class org_tamina_display_ColorMatrix {
	static get_BANDW_MATRIX() {
		return [0.2225,0.7169,0.0606,0,0,0.2225,0.7169,0.0606,0,0,0.2225,0.7169,0.0606,0,0,0,0,0,1,0];
	}
	static get_NEGATIVE_MATRIX() {
		return [-1,0,0,0,255,0,-1,0,0,255,0,0,-1,0,255,0,0,0,1,0];
	}
	static get_SEPIA_MATRIX() {
		return [0.3930000066757202,0.7689999938011169,0.1889999955892563,0,0,0.3490000069141388,0.6859999895095825,0.1679999977350235,0,0,0.2720000147819519,0.5339999794960022,0.1309999972581863,0,0,0,0,0,1,0,0,0,0,0,1];
	}
}
$hxClasses["org.tamina.display.ColorMatrix"] = org_tamina_display_ColorMatrix;
org_tamina_display_ColorMatrix.__name__ = "org.tamina.display.ColorMatrix";
org_tamina_display_ColorMatrix.__properties__ = {get_SEPIA_MATRIX: "get_SEPIA_MATRIX",get_NEGATIVE_MATRIX: "get_NEGATIVE_MATRIX",get_BANDW_MATRIX: "get_BANDW_MATRIX"};
class org_tamina_events_Event {
	constructor(type,data) {
		this.type = type;
		this.data = data;
	}
}
$hxClasses["org.tamina.events.Event"] = org_tamina_events_Event;
org_tamina_events_Event.__name__ = "org.tamina.events.Event";
Object.assign(org_tamina_events_Event.prototype, {
	__class__: org_tamina_events_Event
});
class org_tamina_events_EventDispatcher {
	constructor() {
		this._eventsCallback = new haxe_ds_StringMap();
	}
	addEventListener(type,listener) {
		var _this = this._eventsCallback;
		if(!(__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type))) {
			var _this1 = this._eventsCallback;
			var value = [];
			if(__map_reserved[type] != null) {
				_this1.setReserved(type,value);
			} else {
				_this1.h[type] = value;
			}
		}
		var _this2 = this._eventsCallback;
		(__map_reserved[type] != null ? _this2.getReserved(type) : _this2.h[type]).push(listener);
	}
	removeEventListener(type,listener) {
		var _this = this._eventsCallback;
		if(__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) {
			var _this1 = this._eventsCallback;
			var events = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			HxOverrides.remove(events,listener);
		}
	}
	removeAllEventListeners(type) {
		var _this = this._eventsCallback;
		if(__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) {
			this._eventsCallback.remove(type);
		}
	}
	dispatchEvent(event) {
		var _this = this._eventsCallback;
		var key = event.type;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this._eventsCallback;
			var key1 = event.type;
			var events = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]).slice(0);
			var _g = 0;
			var _g1 = events.length;
			while(_g < _g1) {
				var i = _g++;
				var _this2 = this._eventsCallback;
				var key2 = event.type;
				if((__map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2]).indexOf(events[i]) > -1) {
					events[i](event);
				}
			}
		}
	}
}
$hxClasses["org.tamina.events.EventDispatcher"] = org_tamina_events_EventDispatcher;
org_tamina_events_EventDispatcher.__name__ = "org.tamina.events.EventDispatcher";
Object.assign(org_tamina_events_EventDispatcher.prototype, {
	__class__: org_tamina_events_EventDispatcher
});
class org_tamina_events_XMLHttpRequestEvent {
}
$hxClasses["org.tamina.events.XMLHttpRequestEvent"] = org_tamina_events_XMLHttpRequestEvent;
org_tamina_events_XMLHttpRequestEvent.__name__ = "org.tamina.events.XMLHttpRequestEvent";
class org_tamina_events_html_ImageEvent {
}
$hxClasses["org.tamina.events.html.ImageEvent"] = org_tamina_events_html_ImageEvent;
org_tamina_events_html_ImageEvent.__name__ = "org.tamina.events.html.ImageEvent";
class org_tamina_geom_Point {
	constructor(x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.x = x;
		this.y = y;
	}
}
$hxClasses["org.tamina.geom.Point"] = org_tamina_geom_Point;
org_tamina_geom_Point.__name__ = "org.tamina.geom.Point";
Object.assign(org_tamina_geom_Point.prototype, {
	__class__: org_tamina_geom_Point
});
class org_tamina_geom_Junction extends org_tamina_geom_Point {
	constructor(x,y,id) {
		if(id == null) {
			id = "";
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		super(x,y);
		this.links = [];
		this.id = id;
	}
}
$hxClasses["org.tamina.geom.Junction"] = org_tamina_geom_Junction;
org_tamina_geom_Junction.__name__ = "org.tamina.geom.Junction";
org_tamina_geom_Junction.__super__ = org_tamina_geom_Point;
Object.assign(org_tamina_geom_Junction.prototype, {
	__class__: org_tamina_geom_Junction
});
class org_tamina_html_component_HTMLComponent extends HTMLElement {
	connectedCallback() {
		if(!this.created) {
			this.createComponent();
		}
		if(!this.initialized) {
			this.dispatchEvent(org_tamina_html_component_HTMLComponentEventFactory.createEvent("initialize",false));
		}
		this.initialized = true;
	}
	disconnectedCallback() {
	}
	adoptedCallback() {
	}
	attributeChangedCallback(attrName,oldVal,newVal) {
	}
	initDefaultValues() {
		this._visible = true;
		this._useExternalContent = false;
		this._defaultDisplayStyle = "";
	}
	get_visible() {
		return this._visible;
	}
	set_visible(value) {
		this._visible = value;
		if(this._defaultDisplayStyle == "" || this._defaultDisplayStyle == "none" || this._defaultDisplayStyle == null) {
			this._defaultDisplayStyle = this.style.display;
			if(this._defaultDisplayStyle == "" || this._defaultDisplayStyle == "none") {
				this._defaultDisplayStyle = "block";
			}
		}
		if(this._visible) {
			this.style.display = this._defaultDisplayStyle;
		} else {
			this.style.display = "none";
		}
		return this._visible;
	}
	createComponent() {
		this.initDefaultValues();
		this.parseContent();
		this.initContent();
		this.displayContent();
		this.updateSkinPartsStatus();
		this.created = true;
		if(this._skinPartsAttached) {
			this.creationCompleteCallback();
		}
	}
	creationCompleteCallback() {
		this.creationComplete = true;
		this.dispatchEvent(org_tamina_html_component_HTMLComponentEventFactory.createEvent("creationComplete",false));
	}
	getContent() {
		return this.getView();
	}
	parseContent(useExternalContent) {
		if(useExternalContent == null) {
			useExternalContent = true;
		}
		var content = "";
		if(this.childElementCount == 0 || !useExternalContent) {
			content = this.translateContent(this.getContent());
			this._tempElement = window.document.createElement("div");
		} else {
			this._useExternalContent = true;
			this._tempElement = this;
			content = this.translateContent(this.innerHTML);
		}
		this._tempElement.innerHTML = content;
		var children = this._tempElement.getElementsByTagName("*");
		var _g = 0;
		while(_g < children.length) {
			var child = children[_g];
			++_g;
			if(!Object.prototype.hasOwnProperty.call(child,"host")) {
				child["host"] = this;
			}
		}
		this.initSkinParts(this._tempElement);
	}
	initSkinParts(target) {
		var c = js_Boot.getClass(this);
		this._skinParts = [];
		while(c != org_tamina_html_component_HTMLComponent && c != null) {
			var meta = haxe_rtti_Meta.getFields(c);
			var metaFields = Reflect.fields(meta);
			var _g = 0;
			var _g1 = metaFields.length;
			while(_g < _g1) {
				var i = _g++;
				var field = Reflect.field(meta,metaFields[i]);
				if(Object.prototype.hasOwnProperty.call(field,"skinpart")) {
					var element = org_tamina_utils_HTMLUtils.getElementByAttribute(target,"data-id",metaFields[i]);
					this[metaFields[i]] = element;
					if(element == null) {
						console.log("./org/tamina/html/component/HTMLComponent.hx:237:","skinpart is null: " + metaFields[i] + " from " + this.nodeName);
					}
					this._skinParts.push(element);
				}
			}
			c = c.__super__;
		}
	}
	updateSkinPartsStatus() {
		this._skinPartsWaiting = [];
		var _g = 0;
		var _g1 = this._skinParts;
		while(_g < _g1.length) {
			var skinPart = _g1[_g];
			++_g;
			if(org_tamina_html_component_HTMLApplication.isCustomElement(skinPart.nodeName) && skinPart.initialized != true) {
				this._skinPartsWaiting.push(skinPart);
			}
		}
		this._skinPartsAttached = this._skinPartsWaiting.length == 0;
		if(!this._skinPartsAttached) {
			var _g2 = 0;
			var _g3 = this._skinPartsWaiting;
			while(_g2 < _g3.length) {
				var skinPart1 = _g3[_g2];
				++_g2;
				skinPart1.addEventListener("initialize",(function(skinPart2,f) {
					return function() {
						f[0](skinPart2[0]);
					};
				})([skinPart1],[$bind(this,this.skinPartReadyHandler)]));
			}
		}
	}
	skinPartReadyHandler(skinPart) {
		HxOverrides.remove(this._skinPartsWaiting,skinPart);
		this._skinPartsAttached = this._skinPartsWaiting.length == 0;
		if(!this.creationComplete && this._skinPartsAttached) {
			this.creationCompleteCallback();
		}
	}
	translateContent(source) {
		var content = source;
		var stringToTranslate = new RegExp("\\{\\{(?!\\}\\})(.+)\\}\\}","gim");
		var results = [];
		var result = [];
		var i = 0;
		while(true) {
			result = stringToTranslate.exec(content);
			if(!(result != null)) {
				break;
			}
			results[i] = result;
			++i;
		}
		result = [];
		var _g = 0;
		while(_g < results.length) {
			var result1 = results[_g];
			++_g;
			var totalString = result1[0];
			var key = StringTools.trim(result1[1]);
			content = StringTools.replace(content,totalString,org_tamina_i18n_LocalizationManager.get_instance().getString(key));
		}
		return content;
	}
	initContent() {
	}
	displayContent() {
		var numChildren = this._tempElement.children.length;
		if(!this._useExternalContent) {
			while(numChildren > 0) {
				--numChildren;
				var item = this._tempElement.children.item(0);
				this.appendChild(item);
			}
		}
	}
}
$hxClasses["org.tamina.html.component.HTMLComponent"] = org_tamina_html_component_HTMLComponent;
org_tamina_html_component_HTMLComponent.__name__ = "org.tamina.html.component.HTMLComponent";
org_tamina_html_component_HTMLComponent.__super__ = HTMLElement;
Object.assign(org_tamina_html_component_HTMLComponent.prototype, {
	__class__: org_tamina_html_component_HTMLComponent
	,__properties__: {set_visible: "set_visible",get_visible: "get_visible"}
});
class org_tamina_html_component_HTMLComponentEventFactory {
	static createEvent(type,bubbles) {
		if(bubbles == null) {
			bubbles = true;
		}
		var result = window.document.createEvent("Event");
		result.initEvent(type,bubbles,true);
		return result;
	}
}
$hxClasses["org.tamina.html.component.HTMLComponentEventFactory"] = org_tamina_html_component_HTMLComponentEventFactory;
org_tamina_html_component_HTMLComponentEventFactory.__name__ = "org.tamina.html.component.HTMLComponentEventFactory";
class org_tamina_i18n_ITranslation {
}
$hxClasses["org.tamina.i18n.ITranslation"] = org_tamina_i18n_ITranslation;
org_tamina_i18n_ITranslation.__name__ = "org.tamina.i18n.ITranslation";
Object.assign(org_tamina_i18n_ITranslation.prototype, {
	__class__: org_tamina_i18n_ITranslation
});
class org_tamina_i18n_LocalizationManager {
	constructor() {
		this._translations = new haxe_ds_StringMap();
	}
	setTranslations(translations) {
		var _g = 0;
		while(_g < translations.length) {
			var translation = translations[_g];
			++_g;
			var _this = this._translations;
			var key = translation.fieldName;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,translation);
			} else {
				_this.h[key] = translation;
			}
		}
	}
	getString(key) {
		var result = "";
		var _this = this._translations;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this._translations;
			result = (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).value;
		}
		return result;
	}
	static add(manager) {
		org_tamina_i18n_LocalizationManager._instance = manager;
	}
	static get_instance() {
		if(org_tamina_i18n_LocalizationManager._instance == null) {
			org_tamina_i18n_LocalizationManager._instance = new org_tamina_i18n_LocalizationManager();
		}
		return org_tamina_i18n_LocalizationManager._instance;
	}
}
$hxClasses["org.tamina.i18n.LocalizationManager"] = org_tamina_i18n_LocalizationManager;
org_tamina_i18n_LocalizationManager.__name__ = "org.tamina.i18n.LocalizationManager";
org_tamina_i18n_LocalizationManager.__properties__ = {get_instance: "get_instance"};
Object.assign(org_tamina_i18n_LocalizationManager.prototype, {
	__class__: org_tamina_i18n_LocalizationManager
});
class org_tamina_io_ImageLoader {
	constructor(toDataURL) {
		if(toDataURL == null) {
			toDataURL = true;
		}
		this._image = new Image();
		this._image.crossOrigin = "anonymous";
	}
	get_image() {
		return this._image;
	}
	get_dataURL() {
		var result = "";
		if(this._image != null) {
			result = this._image.src;
		}
		return result;
	}
	load(url) {
		this._url = url;
		this._image.addEventListener("load",$bind(this,this.imageLoadHandler),false);
		this._image.addEventListener("error",$bind(this,this.imageLoadErrorHandler),false);
		return new Promise($bind(this,this.start));
	}
	start(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		this._image.src = this._url.path;
	}
	imageLoadErrorHandler(event) {
		this._image.removeEventListener("load",$bind(this,this.imageLoadHandler));
		this._image.removeEventListener("error",$bind(this,this.imageLoadErrorHandler));
		this._reject(new Error("Error while loading : " + this._url.path));
	}
	imageLoadHandler(event) {
		this._image.removeEventListener("load",$bind(this,this.imageLoadHandler));
		this._image.removeEventListener("error",$bind(this,this.imageLoadErrorHandler));
		if(this._toDataURL) {
			var canvas = window.document.createElement("canvas");
			canvas.width = this._image.width;
			canvas.height = this._image.height;
			var ctx = canvas.getContext("2d",null);
			ctx.drawImage(this._image,0,0,this._image.width,this._image.height);
			var outputImage = new Image();
			outputImage.src = canvas.toDataURL();
			this._resolve(outputImage);
		} else {
			this._resolve(this._image);
		}
	}
}
$hxClasses["org.tamina.io.ImageLoader"] = org_tamina_io_ImageLoader;
org_tamina_io_ImageLoader.__name__ = "org.tamina.io.ImageLoader";
Object.assign(org_tamina_io_ImageLoader.prototype, {
	__class__: org_tamina_io_ImageLoader
	,__properties__: {get_image: "get_image",get_dataURL: "get_dataURL"}
});
class org_tamina_log__$LogLevel_LogLevel_$Impl_$ {
	static compareMinusOrEqual(this1,target) {
		return this1 <= target;
	}
}
$hxClasses["org.tamina.log._LogLevel.LogLevel_Impl_"] = org_tamina_log__$LogLevel_LogLevel_$Impl_$;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.__name__ = "org.tamina.log._LogLevel.LogLevel_Impl_";
class org_tamina_log_QuickLogger {
	static info(message,source) {
		if(org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual(org_tamina_log_QuickLogger.level,0)) {
			org_tamina_log_QuickLogger.log(0,message);
		}
	}
	static debug(message,source) {
		if(org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual(org_tamina_log_QuickLogger.level,1)) {
			org_tamina_log_QuickLogger.log(1,message);
		}
	}
	static warn(message,source) {
		if(org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual(org_tamina_log_QuickLogger.level,2)) {
			org_tamina_log_QuickLogger.log(2,message);
		}
	}
	static error(message,source) {
		if(org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual(org_tamina_log_QuickLogger.level,3)) {
			org_tamina_log_QuickLogger.log(3,message);
		}
	}
	static profile(start) {
		if(start == null) {
			start = false;
		}
		if(org_tamina_log_QuickLogger._startProfilingDate != null && !start) {
			org_tamina_log_QuickLogger.debug("profling result : " + (new Date().getTime() - org_tamina_log_QuickLogger._startProfilingDate.getTime()) + " ms");
		}
		org_tamina_log_QuickLogger._startProfilingDate = new Date();
	}
	static log(level,message) {
		var prefix = HxOverrides.dateStr(new Date());
		var $console = window.console;
		switch(level) {
		case 0:
			$console.info(prefix + " [INFO] " + message);
			break;
		case 1:
			$console.debug(prefix + " [DEBUG] " + message);
			break;
		case 2:
			$console.warn(prefix + " [WARN] " + message);
			break;
		case 3:
			$console.error(prefix + " [ERROR] " + message);
			break;
		case 4:
			$console.log(prefix + " [NONE] " + message);
			break;
		}
	}
}
$hxClasses["org.tamina.log.QuickLogger"] = org_tamina_log_QuickLogger;
org_tamina_log_QuickLogger.__name__ = "org.tamina.log.QuickLogger";
class org_tamina_net_AssetCompositeLoader {
	constructor() {
		this._pool = [];
		this._errors = [];
	}
	add(group) {
		this._pool.push(group);
	}
	start() {
		return new Promise($bind(this,this.loadNextGroup));
	}
	loadNextGroup(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		if(this._pool.length > 0) {
			var g = this._pool.shift();
			if(g.loadingType == "sequence") {
				var loader = new org_tamina_net_AssetsSequenceLoader();
				loader.load(g.toArray()).then($bind(this,this.assetCompleteHandler))["catch"]($bind(this,this.assetErrorHandler));
			} else {
				var loader1 = new org_tamina_net_AssetParallelLoader();
				loader1.load(g.toArray()).then($bind(this,this.assetCompleteHandler))["catch"]($bind(this,this.assetErrorHandler));
			}
		} else if(this._errors.length == 0) {
			org_tamina_log_QuickLogger.info("ALL ASSETS LOADED");
			this._resolve(true);
		} else {
			this._reject(this._errors);
		}
	}
	assetCompleteHandler(value) {
		this.loadNextGroup(this._resolve,this._reject);
	}
	assetErrorHandler(errors) {
		this._errors = this._errors.concat(errors);
		this.loadNextGroup(this._resolve,this._reject);
	}
}
$hxClasses["org.tamina.net.AssetCompositeLoader"] = org_tamina_net_AssetCompositeLoader;
org_tamina_net_AssetCompositeLoader.__name__ = "org.tamina.net.AssetCompositeLoader";
Object.assign(org_tamina_net_AssetCompositeLoader.prototype, {
	__class__: org_tamina_net_AssetCompositeLoader
});
class org_tamina_net_AssetLoader {
	constructor() {
		this._cache = new org_tamina_net_AssetLoaderCache();
	}
	load(url) {
		this._url = url;
		this._asset = this._cache.getLoadingAsset(this._url);
		return new Promise($bind(this,this.loadPromise));
	}
	loadPromise(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		if(this._cache.isLoaded(this._url)) {
			org_tamina_log_QuickLogger.info("Asset already loaded : " + this._url.get_documentName());
			this.loadCompleteHandler();
		} else if(this._asset != null) {
			org_tamina_log_QuickLogger.info("Loading asset : " + this._url.get_documentName());
			this._asset.addEventListener("load",$bind(this,this.loadCompleteHandler));
			this._asset.addEventListener("error",$bind(this,this.loadErrorHandler));
		} else {
			org_tamina_log_QuickLogger.info("Loading " + this._url.path);
			var tagName = "script";
			if(this._url.assetType == "css") {
				tagName = "link";
			}
			this._asset = window.document.createElement(tagName);
			this._asset.addEventListener("load",$bind(this,this.loadCompleteHandler));
			this._asset.addEventListener("error",$bind(this,this.loadErrorHandler));
			this._cache.addLoadingAsset(this._asset);
			switch(this._url.assetType) {
			case "css":
				var link = this._asset;
				link.type = "text/css";
				link.rel = "stylesheet";
				link.href = this._url.path;
				break;
			case "js":
				var script = this._asset;
				script.type = "text/javascript";
				script.src = this._url.path;
				break;
			}
			this._header = window.document.getElementsByTagName("head")[0];
			this._header.appendChild(this._asset);
		}
	}
	loadCompleteHandler(event) {
		org_tamina_log_QuickLogger.info("asset loaded");
		this._cache.addLoadedAsset(this._url);
		this._cache.removeLoadingAsset(this._asset);
		this._resolve(true);
	}
	loadErrorHandler(event) {
		this._cache.removeLoadingAsset(this._asset);
		this._reject(new Error("Error while loading " + this._url.path));
	}
}
$hxClasses["org.tamina.net.AssetLoader"] = org_tamina_net_AssetLoader;
org_tamina_net_AssetLoader.__name__ = "org.tamina.net.AssetLoader";
Object.assign(org_tamina_net_AssetLoader.prototype, {
	__class__: org_tamina_net_AssetLoader
});
class org_tamina_net_AssetLoaderCache {
	constructor() {
		if(this.get__cache() == null) {
			this.set__cache(new org_tamina_net__$AssetLoaderCache_Cache());
		}
	}
	getLoadingAsset(url) {
		var result = null;
		var _g = 0;
		var _g1 = this.get__cache().assetsLoading.length;
		_hx_loop1: while(_g < _g1) {
			var i = _g++;
			var asset = this.get__cache().assetsLoading[i];
			switch(url.assetType) {
			case "css":
				var link = asset;
				if(link.href == url.path) {
					result = asset;
					break _hx_loop1;
				}
				break;
			case "js":
				var script = asset;
				if(script.src == url.path) {
					result = asset;
					break _hx_loop1;
				}
				break;
			}
		}
		return result;
	}
	isLoaded(assetUrl) {
		return this.get__cache().assetsLoaded.indexOf(assetUrl.path) >= 0;
	}
	addLoadedAsset(assetUrl) {
		this.get__cache().assetsLoaded.push(assetUrl.path);
	}
	addLoadingAsset(asset) {
		this.get__cache().assetsLoading.push(asset);
	}
	removeLoadingAsset(asset) {
		HxOverrides.remove(this.get__cache().assetsLoading,asset);
	}
	set__cache(value) {
		window["assetLoaderCache"] = value;
		return null;
	}
	get__cache() {
		return Reflect.field(window,"assetLoaderCache");
	}
}
$hxClasses["org.tamina.net.AssetLoaderCache"] = org_tamina_net_AssetLoaderCache;
org_tamina_net_AssetLoaderCache.__name__ = "org.tamina.net.AssetLoaderCache";
Object.assign(org_tamina_net_AssetLoaderCache.prototype, {
	__class__: org_tamina_net_AssetLoaderCache
	,__properties__: {set__cache: "set__cache",get__cache: "get__cache"}
});
class org_tamina_net__$AssetLoaderCache_Cache {
	constructor() {
		this.assetsLoaded = [];
		this.assetsLoading = [];
	}
}
$hxClasses["org.tamina.net._AssetLoaderCache.Cache"] = org_tamina_net__$AssetLoaderCache_Cache;
org_tamina_net__$AssetLoaderCache_Cache.__name__ = "org.tamina.net._AssetLoaderCache.Cache";
Object.assign(org_tamina_net__$AssetLoaderCache_Cache.prototype, {
	__class__: org_tamina_net__$AssetLoaderCache_Cache
});
class org_tamina_net_BaseAssetsLoader {
	constructor() {
		if(org_tamina_net_BaseAssetsLoader._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this._pool = [];
		this._loader = new org_tamina_net_AssetLoader();
		this._errors = [];
	}
	load(assets) {
		this._pool = assets;
		return null;
	}
	end() {
		if(this._errors.length == 0) {
			this._resolve(true);
		} else {
			this._reject(this._errors);
		}
	}
}
$hxClasses["org.tamina.net.BaseAssetsLoader"] = org_tamina_net_BaseAssetsLoader;
org_tamina_net_BaseAssetsLoader.__name__ = "org.tamina.net.BaseAssetsLoader";
Object.assign(org_tamina_net_BaseAssetsLoader.prototype, {
	__class__: org_tamina_net_BaseAssetsLoader
});
class org_tamina_net_AssetParallelLoader extends org_tamina_net_BaseAssetsLoader {
	constructor() {
		org_tamina_net_BaseAssetsLoader._hx_skip_constructor = true;
		super();
		org_tamina_net_BaseAssetsLoader._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._remainingAssetNumber = 0;
		super._hx_constructor();
	}
	load(assets) {
		this._pool = assets;
		this._remainingAssetNumber = this._pool.length;
		return new Promise($bind(this,this.start));
	}
	start(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		var _g = 0;
		var _g1 = this._pool.length;
		while(_g < _g1) {
			var i = _g++;
			var l = new org_tamina_net_AssetLoader();
			l.load(this._pool[i]).then($bind(this,this.assetCompleteHandler))["catch"]($bind(this,this.assetErrorHandler));
		}
	}
	assetCompleteHandler(value) {
		this._remainingAssetNumber--;
		if(this._remainingAssetNumber == 0) {
			this.end();
		}
	}
	assetErrorHandler(error) {
		org_tamina_log_QuickLogger.error("error while loading asset");
		this._remainingAssetNumber--;
		this._errors.push(error);
		if(this._remainingAssetNumber == 0) {
			this.end();
		}
	}
}
$hxClasses["org.tamina.net.AssetParallelLoader"] = org_tamina_net_AssetParallelLoader;
org_tamina_net_AssetParallelLoader.__name__ = "org.tamina.net.AssetParallelLoader";
org_tamina_net_AssetParallelLoader.__super__ = org_tamina_net_BaseAssetsLoader;
Object.assign(org_tamina_net_AssetParallelLoader.prototype, {
	__class__: org_tamina_net_AssetParallelLoader
});
class org_tamina_net_URL {
	constructor(path) {
		if(path == null) {
			path = "";
		}
		this.path = path;
		this._parameters = new haxe_ds_StringMap();
		if(path.lastIndexOf("?") > 0) {
			var params = path.substring(path.lastIndexOf("?") + 1);
			var elements = params.split("&");
			var _g = 0;
			var _g1 = elements.length;
			while(_g < _g1) {
				var i = _g++;
				var element = elements[i].split("=");
				var _this = this._parameters;
				var key = element[0];
				var value = element[1];
				if(__map_reserved[key] != null) {
					_this.setReserved(key,value);
				} else {
					_this.h[key] = value;
				}
			}
		}
	}
	get_scheme() {
		var result = "";
		if(this.path.indexOf(":") > 0) {
			result = this.path.substring(0,this.path.indexOf(":"));
		}
		return result;
	}
	get_parameters() {
		return this._parameters;
	}
	get_extension() {
		var result = "";
		var pathWithoutParams = this.path;
		if(this.path.indexOf("?") > -1) {
			pathWithoutParams = this.path.substring(0,this.path.indexOf("?"));
		}
		var extensionSize = pathWithoutParams.length - pathWithoutParams.lastIndexOf(".") - 1;
		if(extensionSize >= 2 && extensionSize <= 4) {
			result = pathWithoutParams.substring(pathWithoutParams.length - extensionSize);
		}
		return result;
	}
	get_documentName() {
		var result = "";
		if(this.path != null) {
			result = this.path.substring(this.path.lastIndexOf("/") + 1);
		}
		return result;
	}
	toString() {
		return this.path;
	}
	removeParameter(key) {
		var rtn = this.path;
		if(this.path.indexOf("?") != -1) {
			rtn = this.path.split("?")[0];
			var param;
			var params_arr = [];
			var queryString = this.path.indexOf("?") != -1 ? this.path.split("?")[1] : "";
			if(queryString != "") {
				params_arr = queryString.split("&");
				var i = params_arr.length - 1;
				while(i >= 0) {
					param = params_arr[i].split("=")[0];
					if(param == key) {
						params_arr.splice(i,1);
					}
					--i;
				}
				rtn = rtn + "?" + params_arr.join("&");
			}
		}
		this.path = rtn;
	}
}
$hxClasses["org.tamina.net.URL"] = org_tamina_net_URL;
org_tamina_net_URL.__name__ = "org.tamina.net.URL";
Object.assign(org_tamina_net_URL.prototype, {
	__class__: org_tamina_net_URL
	,__properties__: {get_parameters: "get_parameters",get_scheme: "get_scheme",get_extension: "get_extension",get_documentName: "get_documentName"}
});
class org_tamina_net_AssetURL extends org_tamina_net_URL {
	constructor(path,assetType) {
		if(assetType == null) {
			assetType = "js";
		}
		super(path);
		this.assetType = assetType;
	}
}
$hxClasses["org.tamina.net.AssetURL"] = org_tamina_net_AssetURL;
org_tamina_net_AssetURL.__name__ = "org.tamina.net.AssetURL";
org_tamina_net_AssetURL.__super__ = org_tamina_net_URL;
Object.assign(org_tamina_net_AssetURL.prototype, {
	__class__: org_tamina_net_AssetURL
});
class org_tamina_net_AssetsSequenceLoader extends org_tamina_net_BaseAssetsLoader {
	constructor() {
		super();
	}
	load(assets) {
		this._pool = assets;
		return new Promise($bind(this,this.loadNextAsset));
	}
	assetCompleteHandler(value) {
		this.loadNextAsset(this._resolve,this._reject);
	}
	assetErrorHandler(error) {
		this._errors.push(error);
		this.loadNextAsset(this._resolve,this._reject);
	}
	loadNextAsset(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		if(this._pool.length > 0) {
			this._loader.load(this._pool.shift()).then($bind(this,this.assetCompleteHandler))["catch"]($bind(this,this.assetErrorHandler));
		} else {
			this.end();
		}
	}
}
$hxClasses["org.tamina.net.AssetsSequenceLoader"] = org_tamina_net_AssetsSequenceLoader;
org_tamina_net_AssetsSequenceLoader.__name__ = "org.tamina.net.AssetsSequenceLoader";
org_tamina_net_AssetsSequenceLoader.__super__ = org_tamina_net_BaseAssetsLoader;
Object.assign(org_tamina_net_AssetsSequenceLoader.prototype, {
	__class__: org_tamina_net_AssetsSequenceLoader
});
class org_tamina_net_GroupURL {
	constructor(type,cacheKiller) {
		if(type == null) {
			type = "sequence";
		}
		this.loadingType = type;
		this._pool = [];
		this._cacheKiller = cacheKiller;
	}
	add(url,assetType) {
		if(assetType == null) {
			assetType = "js";
		}
		var assetURL = new org_tamina_net_AssetURL(url.path,assetType);
		this._pool.push(assetURL);
	}
	toArray() {
		var result = [];
		var _g = 0;
		var _g1 = this._pool.length;
		while(_g < _g1) {
			var i = _g++;
			var path = this._pool[i].path;
			if(this._cacheKiller != null) {
				path += "?cacheKiller=" + Std.string(this._cacheKiller());
			}
			var assetURL = new org_tamina_net_AssetURL(path);
			assetURL.assetType = this._pool[i].assetType;
			result.push(assetURL);
		}
		return result;
	}
}
$hxClasses["org.tamina.net.GroupURL"] = org_tamina_net_GroupURL;
org_tamina_net_GroupURL.__name__ = "org.tamina.net.GroupURL";
Object.assign(org_tamina_net_GroupURL.prototype, {
	__class__: org_tamina_net_GroupURL
});
class org_tamina_net_XMLLoader {
	constructor() {
		this._configLoader = new XMLHttpRequest();
		try {
			this._configLoader.overrideMimeType("text/xml");
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			org_tamina_log_QuickLogger.warn("overrideMimeType not supported");
		}
		try {
			this._configLoader.responseType = "document";
		} catch( e2 ) {
			var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
			org_tamina_log_QuickLogger.warn("responseType not supported");
		}
	}
	load(url) {
		this._url = url;
		return new Promise($bind(this,this.start));
	}
	start(resolve,reject) {
		var _gthis = this;
		this._configLoader.addEventListener("load",function(event) {
			_gthis._configDocument = _gthis._configLoader.responseXML;
			resolve(_gthis._configDocument);
		});
		this._configLoader.addEventListener("error",function(error) {
			reject(error);
		});
		this._configLoader.open("GET",this._url.path,true);
		this._configLoader.send(null);
	}
}
$hxClasses["org.tamina.net.XMLLoader"] = org_tamina_net_XMLLoader;
org_tamina_net_XMLLoader.__name__ = "org.tamina.net.XMLLoader";
Object.assign(org_tamina_net_XMLLoader.prototype, {
	__class__: org_tamina_net_XMLLoader
});
class org_tamina_utils_BindingUtils {
	constructor() {
		this._bindings = [];
		this._timer = new haxe_Timer(2);
		this._timer.run = $bind(this,this.evalBindings);
	}
	evalBindings() {
		var _g = 0;
		var _g1 = this._bindings;
		while(_g < _g1.length) {
			var model = _g1[_g];
			++_g;
			var currentValue = Reflect.getProperty(model.source,model.sourceProperty);
			if(model.value != currentValue) {
				model.value = currentValue;
				Reflect.setProperty(model.target,model.targetProperty,model.value);
			}
		}
	}
	registerBinding(model) {
		this._bindings.push(model);
	}
	unRegisterBinding(model) {
		HxOverrides.remove(this._bindings,model);
	}
	static bindProperty(source,sourceProperty,target,targetProperty) {
		if(org_tamina_utils_BindingUtils._instance == null) {
			org_tamina_utils_BindingUtils._instance = new org_tamina_utils_BindingUtils();
		}
		var model = new org_tamina_utils__$BindingUtils_BindingModel(source,sourceProperty,target,targetProperty);
		org_tamina_utils_BindingUtils._instance.registerBinding(model);
		return model;
	}
	static remove(model) {
		org_tamina_utils_BindingUtils._instance.unRegisterBinding(model);
	}
}
$hxClasses["org.tamina.utils.BindingUtils"] = org_tamina_utils_BindingUtils;
org_tamina_utils_BindingUtils.__name__ = "org.tamina.utils.BindingUtils";
Object.assign(org_tamina_utils_BindingUtils.prototype, {
	__class__: org_tamina_utils_BindingUtils
});
class org_tamina_utils__$BindingUtils_BindingModel {
	constructor(source,sourceProperty,target,targetProperty) {
		this.source = source;
		this.sourceProperty = sourceProperty;
		this.target = target;
		this.targetProperty = targetProperty;
		this.value = Reflect.getProperty(source,sourceProperty);
	}
}
$hxClasses["org.tamina.utils._BindingUtils.BindingModel"] = org_tamina_utils__$BindingUtils_BindingModel;
org_tamina_utils__$BindingUtils_BindingModel.__name__ = "org.tamina.utils._BindingUtils.BindingModel";
Object.assign(org_tamina_utils__$BindingUtils_BindingModel.prototype, {
	__class__: org_tamina_utils__$BindingUtils_BindingModel
});
class org_tamina_utils_ClassUtils {
	static expose(instance,rootInstanceName) {
		window[rootInstanceName] = instance;
	}
}
$hxClasses["org.tamina.utils.ClassUtils"] = org_tamina_utils_ClassUtils;
org_tamina_utils_ClassUtils.__name__ = "org.tamina.utils.ClassUtils";
class org_tamina_utils_ColorUtils {
	static invert(color) {
		if(color.length != 7) {
			throw new Error("Hex color must be six hex numbers in length.");
		}
		var hexnum = HxOverrides.substr(color.toUpperCase(),1,null);
		var splitnum = hexnum.split("");
		var resultnum = "";
		var simplenum = "FEDCBA9876".split("");
		var complexnum = { };
		complexnum.A = "5";
		complexnum.B = "4";
		complexnum.C = "3";
		complexnum.D = "2";
		complexnum.E = "1";
		complexnum.F = "0";
		if(!isNaN(splitnum[0])) {
			resultnum += simplenum[splitnum[0]];
		} else if(complexnum[splitnum[0]]) {
			resultnum += complexnum[splitnum[0]];
		} else {
			throw new Error("Hex colors must only include hex numbers 0-9, and A-F");
		}
		if(!isNaN(splitnum[1])) {
			resultnum += simplenum[splitnum[1]];
		} else if(complexnum[splitnum[1]]) {
			resultnum += complexnum[splitnum[1]];
		} else {
			throw new Error("Hex colors must only include hex numbers 0-9, and A-F");
		}
		if(!isNaN(splitnum[2])) {
			resultnum += simplenum[splitnum[2]];
		} else if(complexnum[splitnum[2]]) {
			resultnum += complexnum[splitnum[2]];
		} else {
			throw new Error("Hex colors must only include hex numbers 0-9, and A-F");
		}
		if(!isNaN(splitnum[3])) {
			resultnum += simplenum[splitnum[3]];
		} else if(complexnum[splitnum[3]]) {
			resultnum += complexnum[splitnum[3]];
		} else {
			throw new Error("Hex colors must only include hex numbers 0-9, and A-F");
		}
		if(!isNaN(splitnum[4])) {
			resultnum += simplenum[splitnum[4]];
		} else if(complexnum[splitnum[4]]) {
			resultnum += complexnum[splitnum[4]];
		} else {
			throw new Error("Hex colors must only include hex numbers 0-9, and A-F");
		}
		if(!isNaN(splitnum[5])) {
			resultnum += simplenum[splitnum[5]];
		} else if(complexnum[splitnum[5]]) {
			resultnum += complexnum[splitnum[5]];
		} else {
			throw new Error("Hex colors must only include hex numbers 0-9, and A-F");
		}
		return "#" + resultnum;
	}
}
$hxClasses["org.tamina.utils.ColorUtils"] = org_tamina_utils_ColorUtils;
org_tamina_utils_ColorUtils.__name__ = "org.tamina.utils.ColorUtils";
class org_tamina_utils_DateUtils {
	static hourToFrenchString(pDate) {
		var result = "";
		var hours = Std.string(pDate.getHours());
		if(pDate.getHours() < 10) {
			hours = "0" + hours;
		}
		var minutes = Std.string(pDate.getMinutes());
		if(pDate.getMinutes() < 10) {
			minutes = "0" + minutes;
		}
		result = hours + "h" + minutes;
		return result;
	}
	static toFrenchString(pDate) {
		var month = Std.string(pDate.getMonth() + 1);
		if(pDate.getMonth() < 9) {
			month = "0" + month;
		}
		var day = Std.string(pDate.getDate());
		if(pDate.getDate() < 10) {
			day = "0" + day;
		}
		return day + "/" + month + "/" + pDate.getFullYear();
	}
}
$hxClasses["org.tamina.utils.DateUtils"] = org_tamina_utils_DateUtils;
org_tamina_utils_DateUtils.__name__ = "org.tamina.utils.DateUtils";
class org_tamina_utils_HTMLUtils {
	static getElementById(parent,id) {
		var result = null;
		if(parent.children != null) {
			var _g = 0;
			var _g1 = parent.children.length;
			while(_g < _g1) {
				var i = _g++;
				var el = parent.children.item(i);
				var elId = org_tamina_utils_HTMLUtils.getAttribute(el,"id");
				if(elId == id) {
					result = el;
					break;
				} else {
					result = org_tamina_utils_HTMLUtils.getElementById(el,id);
				}
			}
		}
		return result;
	}
	static getElementByAttribute(parent,attribute,value) {
		var result = null;
		if(parent.children != null) {
			var _g = 0;
			var _g1 = parent.children.length;
			while(_g < _g1) {
				var i = _g++;
				if(result == null) {
					var el = parent.children.item(i);
					var elId = org_tamina_utils_HTMLUtils.getAttribute(el,attribute);
					if(elId == value) {
						result = el;
						return result;
					} else {
						result = org_tamina_utils_HTMLUtils.getElementByAttribute(el,attribute,value);
					}
				} else {
					return result;
				}
			}
		}
		return result;
	}
	static getAttribute(element,name) {
		var result = "";
		var _g = 0;
		var _g1 = element.attributes.length;
		while(_g < _g1) {
			var i = _g++;
			var att = element.attributes.item(i);
			if(att.name == name) {
				result = att.value;
				break;
			}
		}
		return result;
	}
	static getEventPath(event) {
		var result = [];
		if(event.target != null && ((event.target) instanceof HTMLElement)) {
			result = org_tamina_utils_HTMLUtils.recursivelyFindParent(event.target);
		}
		return result;
	}
	static recursivelyFindParent(element) {
		var result = [];
		result.push(element);
		if(element.nodeName.toLowerCase() != "body" && element.parentNode != null) {
			result = result.concat(org_tamina_utils_HTMLUtils.recursivelyFindParent(element.parentNode));
		}
		return result;
	}
	static findParent(element,doesMatch,maxLevel,currLevel) {
		if(currLevel == null) {
			currLevel = 0;
		}
		if(maxLevel == null) {
			maxLevel = 10;
		}
		if(doesMatch(element)) {
			return element;
		}
		if(doesMatch(element.parentElement)) {
			return element.parentElement;
		}
		if(++currLevel < maxLevel) {
			return org_tamina_utils_HTMLUtils.findParent(element.parentElement,doesMatch,maxLevel,currLevel);
		}
		return null;
	}
	static removeElement(element) {
		var result = true;
		if(element.remove != null) {
			element.remove();
		} else if(element.parentElement != null && element.parentElement.contains(element)) {
			element.parentElement.removeChild(element);
		} else {
			result = false;
		}
		return result;
	}
	static getElementOffset(element) {
		var result = { top : 0, left : 0};
		var rect = element.getBoundingClientRect();
		var body = window.document.body;
		var win = window;
		result.top = Math.round(rect.top + win.pageYOffset - element.clientTop);
		result.left = Math.round(rect.left + win.pageXOffset - element.clientLeft);
		return result;
	}
	static getTouchPosition(element,evt) {
		var offset = org_tamina_utils_HTMLUtils.getElementOffset(element);
		var touch = evt.touches.item(0);
		return new org_tamina_geom_Point(touch.pageX - offset.left,touch.pageY - offset.top);
	}
	static isTouchSupported() {
		var result = !!(('ontouchstart' in window)
            || (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0)
            || (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0));
		return result;
	}
	static getBrowserType(agent) {
		if(agent == null) {
			agent = window.navigator.userAgent;
		}
		var result = org_tamina_utils_BrowserType.Unknown;
		if(new EReg("WebKit","").match(agent)) {
			if(new EReg("Chrome","").match(agent)) {
				result = org_tamina_utils_BrowserType.Chrome;
				var isAndroid = agent.indexOf("Mozilla/5.0") > -1 && agent.indexOf("Android ") > -1 && agent.indexOf("AppleWebKit") > -1;
				if(isAndroid) {
					result = org_tamina_utils_BrowserType.Android;
				}
			} else if(new EReg("Safari","").match(agent)) {
				result = org_tamina_utils_BrowserType.Safari;
			} else {
				result = org_tamina_utils_BrowserType.Opera;
			}
		} else if(new EReg("Opera","").match(agent)) {
			result = org_tamina_utils_BrowserType.Opera;
		} else if(new EReg("Mozilla","").match(agent)) {
			var isIE = agent.indexOf("MSIE ") > -1 || agent.indexOf("Trident/") > -1 || agent.indexOf("Edge/") > -1;
			var isAndroid1 = agent.indexOf("Mozilla/5.0") > -1 && agent.indexOf("Android ") > -1 && agent.indexOf("AppleWebKit") > -1;
			if(isIE) {
				result = org_tamina_utils_BrowserType.IE;
			} else if(isAndroid1) {
				result = org_tamina_utils_BrowserType.Android;
			} else {
				result = org_tamina_utils_BrowserType.FireFox;
			}
		} else {
			result = org_tamina_utils_BrowserType.IE;
		}
		return result;
	}
	static getIEVersion(ua) {
		if(ua == null) {
			ua = window.navigator.userAgent;
		}
		var ieRegex = new EReg("MSIE\\s([0-9]+)","");
		var tridentRegex = new EReg("Trident/.*rv:([0-9]+)","");
		var edgeRegex = new EReg("Edge/([0-9]+)","");
		var regexArray = [ieRegex,tridentRegex,edgeRegex];
		var _g = 0;
		while(_g < regexArray.length) {
			var regex = regexArray[_g];
			++_g;
			if(regex.match(ua)) {
				return Std.parseInt(regex.matched(1));
			}
		}
		return -1;
	}
	static getChromeVersion(ua) {
		if(ua == null) {
			ua = window.navigator.userAgent;
		}
		var chromeRegex = new EReg("Chrome/([0-9]+)","");
		if(chromeRegex.match(ua)) {
			return Std.parseInt(chromeRegex.matched(1));
		}
		return -1;
	}
	static getFirefoxVersion(ua) {
		if(ua == null) {
			ua = window.navigator.userAgent;
		}
		var firefoxRegex = new EReg("Firefox/([0-9]+)","");
		if(firefoxRegex.match(ua)) {
			return Std.parseInt(firefoxRegex.matched(1));
		}
		return -1;
	}
	static getSafariVersion(ua) {
		if(ua == null) {
			ua = window.navigator.userAgent;
		}
		var safariRegex = new EReg("Version/([0-9]+)","");
		if(safariRegex.match(ua)) {
			return Std.parseInt(safariRegex.matched(1));
		}
		return -1;
	}
}
$hxClasses["org.tamina.utils.HTMLUtils"] = org_tamina_utils_HTMLUtils;
org_tamina_utils_HTMLUtils.__name__ = "org.tamina.utils.HTMLUtils";
var org_tamina_utils_BrowserType = $hxEnums["org.tamina.utils.BrowserType"] = { __ename__ : true, __constructs__ : ["Chrome","Android","Safari","WebKitOther","FireFox","Opera","IE","Unknown"]
	,Chrome: {_hx_index:0,__enum__:"org.tamina.utils.BrowserType",toString:$estr}
	,Android: {_hx_index:1,__enum__:"org.tamina.utils.BrowserType",toString:$estr}
	,Safari: {_hx_index:2,__enum__:"org.tamina.utils.BrowserType",toString:$estr}
	,WebKitOther: {_hx_index:3,__enum__:"org.tamina.utils.BrowserType",toString:$estr}
	,FireFox: {_hx_index:4,__enum__:"org.tamina.utils.BrowserType",toString:$estr}
	,Opera: {_hx_index:5,__enum__:"org.tamina.utils.BrowserType",toString:$estr}
	,IE: {_hx_index:6,__enum__:"org.tamina.utils.BrowserType",toString:$estr}
	,Unknown: {_hx_index:7,__enum__:"org.tamina.utils.BrowserType",toString:$estr}
};
class org_tamina_utils_NumberUtils {
	static toFixed(x,decimalPlaces) {
		if(isNaN(x)) {
			return "NaN";
		} else {
			var a = 10;
			var n = decimalPlaces;
			var t = 1;
			var r = 0;
			while(true) {
				if((n & 1) != 0) {
					t = a * t;
				}
				n >>= 1;
				if(n == 0) {
					r = t;
					break;
				} else {
					a *= a;
				}
			}
			var t1 = r;
			var s = Std.string((x * t1 | 0) / t1);
			var i = s.indexOf(".");
			if(i != -1) {
				var _g = HxOverrides.substr(s,i + 1,null).length;
				var _g1 = decimalPlaces;
				while(_g < _g1) {
					var i1 = _g++;
					s += "0";
				}
			} else {
				s += ".";
				var _g2 = 0;
				var _g11 = decimalPlaces;
				while(_g2 < _g11) {
					var i2 = _g2++;
					s += "0";
				}
			}
			return s;
		}
	}
	static roundDec(numIn,decimalPlaces) {
		var nExp = Math.pow(10,decimalPlaces);
		var nRetVal = Math.round(numIn * nExp) / nExp;
		return nRetVal;
	}
	static floorDec(numIn,decimalPlaces) {
		var nExp = Math.pow(10,decimalPlaces);
		var nRetVal = Math.floor(numIn * nExp) / nExp;
		return nRetVal;
	}
	static ceilDec(numIn,decimalPlaces) {
		var nExp = Math.pow(10,decimalPlaces);
		var nRetVal = Math.ceil(numIn * nExp) / nExp;
		return nRetVal;
	}
	static exp(a,n) {
		var t = 1;
		var r = 0;
		while(true) {
			if((n & 1) != 0) {
				t = a * t;
			}
			n >>= 1;
			if(n == 0) {
				r = t;
				break;
			} else {
				a *= a;
			}
		}
		return r;
	}
}
$hxClasses["org.tamina.utils.NumberUtils"] = org_tamina_utils_NumberUtils;
org_tamina_utils_NumberUtils.__name__ = "org.tamina.utils.NumberUtils";
class org_tamina_utils_ObjectUtils {
	static merge(fromObject,toObject) {
		var fields = Reflect.fields(fromObject);
		var _g = 0;
		var _g1 = fields.length;
		while(_g < _g1) {
			var i = _g++;
			var field = fields[i];
			if(Object.prototype.hasOwnProperty.call(toObject,field)) {
				toObject[field] = Reflect.field(fromObject,field);
			}
		}
	}
	static filterById(source) {
		return function(obj) {
			return source.id == obj.id;
		};
	}
}
$hxClasses["org.tamina.utils.ObjectUtils"] = org_tamina_utils_ObjectUtils;
org_tamina_utils_ObjectUtils.__name__ = "org.tamina.utils.ObjectUtils";
class org_tamina_utils_UID {
	static getUID() {
		var result = new Date().getTime();
		if(result <= org_tamina_utils_UID._lastUID) {
			result = org_tamina_utils_UID._lastUID + 1;
		}
		org_tamina_utils_UID._lastUID = result;
		return result;
	}
}
$hxClasses["org.tamina.utils.UID"] = org_tamina_utils_UID;
org_tamina_utils_UID.__name__ = "org.tamina.utils.UID";
class test_html_view_OtherTestComponent extends org_tamina_html_component_HTMLComponent {
	constructor() {
		org_tamina_html_component_HTMLComponent._hx_skip_constructor = true;
		super();
		org_tamina_html_component_HTMLComponent._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._myvar = "coucou";
	}
	connectedCallback() {
		super.connectedCallback();
		this._myvar = "pouet";
	}
	displaySomething() {
		console.log("./test/html/view/OtherTestComponent.hx:16:",this._myvar);
	}
	getView() {
		return "<div>\r\n    pouet\r\n    <button onclick=\"this.host.displaySomething()\">go</button>\r\n</div>";
	}
}
$hxClasses["test.html.view.OtherTestComponent"] = test_html_view_OtherTestComponent;
test_html_view_OtherTestComponent.__name__ = "test.html.view.OtherTestComponent";
test_html_view_OtherTestComponent.__super__ = org_tamina_html_component_HTMLComponent;
Object.assign(test_html_view_OtherTestComponent.prototype, {
	__class__: test_html_view_OtherTestComponent
});
class test_html_view_TestComponent extends org_tamina_html_component_HTMLComponent {
	connectedCallback() {
		super.connectedCallback();
		this._otherComponent.displaySomething();
		this._rand = Math.random();
		this._index = 0;
		this._data = { message : "click to update", name : "me"};
		var watcher = org_tamina_utils_BindingUtils.bindProperty(this._data,"message",this._messageSpan,"innerHTML");
		var _g = 0;
		while(_g < 1000) {
			var i = _g++;
			var element = window.document.createElement("span");
			org_tamina_utils_BindingUtils.bindProperty(this._data,"message",element,"innerHTML");
			this.appendChild(element);
		}
		org_tamina_utils_BindingUtils.remove(watcher);
	}
	toto() {
		console.log("./test/html/view/TestComponent.hx:39:","clicked " + this._rand);
		this._index++;
		this._data.message = "clicked " + this._index + " times";
	}
	getView() {
		return "<div>\r\n    lalalalalaaa\r\n    <button onclick=\"this.host.toto()\">click me</button>\r\n    Today's message is: <span data-bind=\"innerHTML: _data.message\" data-id=\"_messageSpan\"></span>\r\n</div>\r\n<my-othercustomelement data-id=\"_otherComponent\"></my-othercustomelement>";
	}
}
$hxClasses["test.html.view.TestComponent"] = test_html_view_TestComponent;
test_html_view_TestComponent.__name__ = "test.html.view.TestComponent";
test_html_view_TestComponent.__super__ = org_tamina_html_component_HTMLComponent;
Object.assign(test_html_view_TestComponent.prototype, {
	__class__: test_html_view_TestComponent
});
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
org_tamina_events_XMLHttpRequestEvent.PROGRESS = "progress";
org_tamina_events_XMLHttpRequestEvent.LOAD = "load";
org_tamina_events_XMLHttpRequestEvent.ERROR = "error";
org_tamina_events_html_ImageEvent.__meta__ = { obj : { deprecated : null}};
org_tamina_events_html_ImageEvent.LOAD = "load";
org_tamina_events_html_ImageEvent.ERROR = "error";
org_tamina_log__$LogLevel_LogLevel_$Impl_$.INFO = 0;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.DEBUG = 1;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.WARN = 2;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.ERROR = 3;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.NONE = 4;
org_tamina_log_QuickLogger.level = 0;
org_tamina_net_BaseAssetsLoader._hx_skip_constructor = false;
org_tamina_utils_UID._lastUID = 0;
test_html_view_OtherTestComponent.__meta__ = { obj : { view : ["","my-othercustomelement"]}};
test_html_view_OtherTestComponent.__registered = (function($this) {
	var $r;
	{
		var this1 = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
		var key = "my-othercustomelement".toLowerCase();
		var _this = this1;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,"test.html.view.OtherTestComponent");
		} else {
			_this.h[key] = "test.html.view.OtherTestComponent";
		}
	}
	$r = true;
	return $r;
}(this));
test_html_view_TestComponent.__meta__ = { obj : { view : ["","my-customelement"]}, fields : { _otherComponent : { skinpart : [""]}, _messageSpan : { skinpart : [""]}}};
test_html_view_TestComponent.__registered = (function($this) {
	var $r;
	{
		var this1 = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
		var key = "my-customelement".toLowerCase();
		var _this = this1;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,"test.html.view.TestComponent");
		} else {
			_this.h[key] = "test.html.view.TestComponent";
		}
	}
	$r = true;
	return $r;
}(this));
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
