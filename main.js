// Generated by Haxe 3.4.2
(function ($hx_exports, $global) { "use strict";
var $hxClasses = {};
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var org_tamina_html_component_HTMLApplication = function() {
};
$hxClasses["org.tamina.html.component.HTMLApplication"] = org_tamina_html_component_HTMLApplication;
org_tamina_html_component_HTMLApplication.__name__ = ["org","tamina","html","component","HTMLApplication"];
org_tamina_html_component_HTMLApplication.get_componentsXTagList = function() {
	if(org_tamina_html_component_HTMLApplication.componentsXTagList == null) {
		org_tamina_html_component_HTMLApplication.componentsXTagList = new haxe_ds_StringMap();
	}
	return org_tamina_html_component_HTMLApplication.componentsXTagList;
};
org_tamina_html_component_HTMLApplication.createInstance = function(type) {
	var className = Type.getClassName(type);
	var tag = org_tamina_html_component_HTMLApplication.getTagByClassName(className);
	return window.document.createElement(tag);
};
org_tamina_html_component_HTMLApplication.isCustomElement = function(nodeName) {
	var this1 = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
	var key = nodeName.toLowerCase();
	var _this = this1;
	if(__map_reserved[key] != null) {
		return _this.existsReserved(key);
	} else {
		return _this.h.hasOwnProperty(key);
	}
};
org_tamina_html_component_HTMLApplication.getTagByClassName = function(className) {
	var result = "";
	var tag = org_tamina_html_component_HTMLApplication.get_componentsXTagList().keys();
	while(tag.hasNext()) {
		var tag1 = tag.next();
		var _this = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
		var value = __map_reserved[tag1] != null ? _this.getReserved(tag1) : _this.h[tag1];
		if(value == className) {
			result = tag1;
			break;
		}
	}
	return result;
};
org_tamina_html_component_HTMLApplication.prototype = {
	loadComponents: function() {
		var tag = org_tamina_html_component_HTMLApplication.get_componentsXTagList().keys();
		while(tag.hasNext()) {
			var tag1 = tag.next();
			var _this = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
			var componentClass = Type.resolveClass(__map_reserved[tag1] != null ? _this.getReserved(tag1) : _this.h[tag1]);
			window.document.registerElement(tag1,componentClass);
		}
	}
	,__class__: org_tamina_html_component_HTMLApplication
};
var Main = $hx_exports["Main"] = function() {
	org_tamina_html_component_HTMLApplication.call(this);
};
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.init = function(translations) {
	org_tamina_i18n_LocalizationManager.get_instance().setTranslations(translations);
	Main._instance.loadComponents();
};
Main.main = function() {
	Main._instance = new Main();
	Main._instance.build();
};
Main.__super__ = org_tamina_html_component_HTMLApplication;
Main.prototype = $extend(org_tamina_html_component_HTMLApplication.prototype,{
	build: function() {
		org_tamina_display_BitmapData.getMimeType("");
		org_tamina_display_ColorMatrix.get_BANDW_MATRIX();
		new org_tamina_events_EventDispatcher();
		new org_tamina_geom_Junction();
		new org_tamina_io_ImageLoader();
		org_tamina_log_QuickLogger.debug("");
		new org_tamina_net_XMLLoader();
		new org_tamina_net_AssetLoader();
		org_tamina_utils_ClassUtils.expose(null,"");
		org_tamina_utils_ColorUtils.invert("#FFFFFF");
		org_tamina_utils_DateUtils.toFrenchString(new Date());
		org_tamina_utils_HTMLUtils.getElementById(window.document.body,"test");
		if(!isNaN(0)) {
			var a = 10;
			var n = 0;
			var t = 1;
			var r = 0;
			while(true) {
				if((n & 1) != 0) {
					t = a * t;
				}
				n >>= 1;
				if(n == 0) {
					r = t;
					break;
				} else {
					a *= a;
				}
			}
			var t1 = r;
			var s = Std.string((0 * t1 | 0) / t1);
			var i = s.indexOf(".");
			if(i != -1) {
				var _g1 = HxOverrides.substr(s,i + 1,null).length;
				var _g = 0;
				while(_g1 < _g) {
					var i1 = _g1++;
					s += "0";
				}
			} else {
				s += ".";
				var _g11 = 0;
				var _g2 = 0;
				while(_g11 < _g2) {
					var i2 = _g11++;
					s += "0";
				}
			}
		}
		org_tamina_utils_ObjectUtils.merge({ },{ });
		org_tamina_utils_UID.getUID();
		var url = new org_tamina_net_URL("https://cdn.heidi.tech/partners/6/designs/1844052/249990b2-51f5-4d3a-89d6-5796ee87d402.png");
		console.log(url.get_scheme());
		var l = new org_tamina_io_ImageLoader();
		l.load(url).then(function(image) {
			window.document.body.appendChild(image);
		})["catch"](function(error) {
			console.log(error.message);
		});
		var xmlLoader = new org_tamina_net_XMLLoader();
		xmlLoader.load(new org_tamina_net_URL("https://raw.githubusercontent.com/bryanlittlefield/Magento-local.xml-Template/master/local.xml")).then(function(value) {
			console.log(value);
		})["catch"](function(value1) {
			console.log(value1);
		});
		var assetLoader = new org_tamina_net_AssetLoader();
		assetLoader.load(new org_tamina_net_AssetURL("toto.js")).then(function(value2) {
			console.log(value2);
		})["catch"](function(value3) {
			console.log(value3.message);
		});
		var assetListLoader = new org_tamina_net_AssetsSequenceLoader();
		assetListLoader.load([new org_tamina_net_AssetURL("https://code.jquery.com/jquery-3.2.1.slim.min.js"),new org_tamina_net_AssetURL("https://code.createjs.com/easeljs-0.8.2.min.js")]).then(function(value4) {
			console.log(value4);
		})["catch"](function(value5) {
			console.log(value5);
		});
		var compositeLoader = new org_tamina_net_AssetCompositeLoader();
		var myComponent = org_tamina_html_component_HTMLApplication.createInstance(test_html_view_TestComponent);
		myComponent.addEventListener("creationComplete",$bind(this,this.myComponent_creationCompleteHandler));
		window.document.body.appendChild(myComponent);
		org_tamina_log_QuickLogger.warn("log");
		var request = new GetAlbumsRequest();
		request.setHeaders(new GetAlbumsRequestHeader("fr_FR","F7CF4DD5-ECBF-4CD6-9E7D-29C513C17401"));
		request.send().then(function(response) {
			console.log(response.ResponseHeader);
		})["catch"](function(error1) {
			console.log(error1.message);
		});
	}
	,myComponent_creationCompleteHandler: function(evt) {
		console.log("hophophop");
	}
	,__class__: Main
});
var org_tamina_net_BaseRequest = function(remoteMethod,method,contentType) {
	if(contentType == null) {
		contentType = "application/json";
	}
	if(method == null) {
		method = "POST";
	}
	this._id = org_tamina_utils_UID.getUID();
	this._contentType = contentType;
	this._httpRequest = new XMLHttpRequest();
	this._httpRequest.upload.addEventListener("progress",$bind(this,this.uploadHandler));
	this._httpRequest.addEventListener("progress",$bind(this,this.progressHandler));
	this._httpRequest.open(method,remoteMethod,true);
	this._httpRequest.setRequestHeader("Content-Type",this._contentType + "; charset=utf-8");
};
$hxClasses["org.tamina.net.BaseRequest"] = org_tamina_net_BaseRequest;
org_tamina_net_BaseRequest.__name__ = ["org","tamina","net","BaseRequest"];
org_tamina_net_BaseRequest.prototype = {
	setHeaders: function(header) {
		this._header = header;
	}
	,get_id: function() {
		return this._id;
	}
	,send: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis._httpRequest.addEventListener("load",function(result) {
				var req = result.target;
				if(req.status == 200) {
					try {
						var p = JSON.parse(req.response);
						resolve(p);
					} catch( e ) {
						if (e instanceof js__$Boot_HaxeError) e = e.val;
						if( js_Boot.__instanceof(e,Error) ) {
							org_tamina_log_QuickLogger.error(e.message);
							reject(new Error("Class Mapping Error : Unexpected response Class " + Std.string(req.response)));
						} else throw(e);
					}
				} else {
					reject(new Error("HTTP Error : Unexpected status code " + req.status));
				}
			});
			_gthis._httpRequest.addEventListener("error",function(event) {
				var req1 = event.target;
				var error = new Error(Type.getClassName(_gthis == null ? null : js_Boot.getClass(_gthis)) + " Request Error");
				org_tamina_log_QuickLogger.error(error.message);
				reject(error);
			});
			_gthis._httpRequest.send(JSON.stringify(_gthis.getRequestContent()));
		});
	}
	,abort: function() {
		this._httpRequest.abort();
	}
	,uploadHandler: function(progress) {
		org_tamina_log_QuickLogger.info("uploading " + progress.loaded + "/" + progress.total);
	}
	,getRequestContent: function() {
		return this._header;
	}
	,progressHandler: function(progress) {
		org_tamina_log_QuickLogger.info("downloading " + progress.loaded + "/" + progress.total);
	}
	,__class__: org_tamina_net_BaseRequest
};
var GetAlbumsRequest = function() {
	org_tamina_net_BaseRequest.call(this,"http://api.heidi.tech/Api.svc/GetAlbums","POST","application/json");
};
$hxClasses["GetAlbumsRequest"] = GetAlbumsRequest;
GetAlbumsRequest.__name__ = ["GetAlbumsRequest"];
GetAlbumsRequest.__super__ = org_tamina_net_BaseRequest;
GetAlbumsRequest.prototype = $extend(org_tamina_net_BaseRequest.prototype,{
	__class__: GetAlbumsRequest
});
var GetAlbumsRequestHeader = function(locale,token) {
	this.Locale = locale;
	this.Token = token;
};
$hxClasses["GetAlbumsRequestHeader"] = GetAlbumsRequestHeader;
GetAlbumsRequestHeader.__name__ = ["GetAlbumsRequestHeader"];
GetAlbumsRequestHeader.prototype = {
	__class__: GetAlbumsRequestHeader
};
var GetAlbumsRequestResponse = function() { };
$hxClasses["GetAlbumsRequestResponse"] = GetAlbumsRequestResponse;
GetAlbumsRequestResponse.__name__ = ["GetAlbumsRequestResponse"];
GetAlbumsRequestResponse.prototype = {
	__class__: GetAlbumsRequestResponse
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = ["haxe","rtti","Meta"];
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var org_tamina_display_BitmapData = function() { };
$hxClasses["org.tamina.display.BitmapData"] = org_tamina_display_BitmapData;
org_tamina_display_BitmapData.__name__ = ["org","tamina","display","BitmapData"];
org_tamina_display_BitmapData.toDataUrl = function(source,width,height,type) {
	var result = "";
	var tempCanvas = window.document.createElement("canvas");
	tempCanvas.width = width;
	tempCanvas.height = height;
	var tempContext = tempCanvas.getContext("2d",null);
	tempContext.drawImage(source,0,0,source.width,source.height,0,0,width,height);
	result = tempCanvas.toDataURL(type);
	tempContext = null;
	try {
		tempCanvas.remove();
	} catch( e ) {
		tempCanvas = null;
	}
	return result;
};
org_tamina_display_BitmapData.imageToCanvas = function(source,width,height) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	var result = window.document.createElement("canvas");
	if(width == -1) {
		width = source.naturalWidth;
		height = source.naturalHeight;
	}
	result.width = width;
	result.height = height;
	var context = result.getContext("2d",null);
	context.drawImage(source,0,0,source.naturalWidth,source.naturalHeight,0,0,width,height);
	context = null;
	return result;
};
org_tamina_display_BitmapData.copyCanvas = function(source,width,height) {
	var result = window.document.createElement("canvas");
	result.width = width;
	result.height = height;
	var context = result.getContext("2d",null);
	context.drawImage(source,0,0,source.width,source.height,0,0,width,height);
	context = null;
	return result;
};
org_tamina_display_BitmapData.getMimeType = function(base64) {
	return base64.substring(base64.indexOf(":") + 1,base64.indexOf(";"));
};
org_tamina_display_BitmapData.getMimeTypeFromURL = function(url) {
	var result = "";
	var _g = url.get_extension().toLowerCase();
	switch(_g) {
	case "bmp":
		result = "image/bmp";
		break;
	case "gif":
		result = "image/gif";
		break;
	case "jpeg":
		result = "image/jpeg";
		break;
	case "jpg":
		result = "image/jpeg";
		break;
	case "png":
		result = "image/png";
		break;
	case "tiff":
		result = "image/tiff";
		break;
	case "webp":
		result = "image/webp";
		break;
	}
	return result;
};
var org_tamina_display_ColorMatrix = function() { };
$hxClasses["org.tamina.display.ColorMatrix"] = org_tamina_display_ColorMatrix;
org_tamina_display_ColorMatrix.__name__ = ["org","tamina","display","ColorMatrix"];
org_tamina_display_ColorMatrix.get_BANDW_MATRIX = function() {
	return [0.2225,0.7169,0.0606,0,0,0.2225,0.7169,0.0606,0,0,0.2225,0.7169,0.0606,0,0,0,0,0,1,0];
};
org_tamina_display_ColorMatrix.get_NEGATIVE_MATRIX = function() {
	return [-1,0,0,0,255,0,-1,0,0,255,0,0,-1,0,255,0,0,0,1,0];
};
org_tamina_display_ColorMatrix.get_SEPIA_MATRIX = function() {
	return [0.3930000066757202,0.7689999938011169,0.1889999955892563,0,0,0.3490000069141388,0.6859999895095825,0.1679999977350235,0,0,0.2720000147819519,0.5339999794960022,0.1309999972581863,0,0,0,0,0,1,0,0,0,0,0,1];
};
var org_tamina_events_Event = function(type,data) {
	this.type = type;
	this.data = data;
};
$hxClasses["org.tamina.events.Event"] = org_tamina_events_Event;
org_tamina_events_Event.__name__ = ["org","tamina","events","Event"];
org_tamina_events_Event.prototype = {
	__class__: org_tamina_events_Event
};
var org_tamina_events_EventDispatcher = function() {
	this._eventsCallback = new haxe_ds_StringMap();
};
$hxClasses["org.tamina.events.EventDispatcher"] = org_tamina_events_EventDispatcher;
org_tamina_events_EventDispatcher.__name__ = ["org","tamina","events","EventDispatcher"];
org_tamina_events_EventDispatcher.prototype = {
	addEventListener: function(type,listener) {
		var _this = this._eventsCallback;
		if(!(__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type))) {
			var _this1 = this._eventsCallback;
			var value = [];
			if(__map_reserved[type] != null) {
				_this1.setReserved(type,value);
			} else {
				_this1.h[type] = value;
			}
		}
		var _this2 = this._eventsCallback;
		(__map_reserved[type] != null ? _this2.getReserved(type) : _this2.h[type]).push(listener);
	}
	,removeEventListener: function(type,listener) {
		var _this = this._eventsCallback;
		if(__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) {
			var _this1 = this._eventsCallback;
			var events = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			HxOverrides.remove(events,listener);
		}
	}
	,removeAllEventListeners: function(type) {
		var _this = this._eventsCallback;
		if(__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) {
			this._eventsCallback.remove(type);
		}
	}
	,dispatchEvent: function(event) {
		var _this = this._eventsCallback;
		var key = event.type;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this._eventsCallback;
			var key1 = event.type;
			var events = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]).slice(0);
			var _g1 = 0;
			var _g = events.length;
			while(_g1 < _g) {
				var i = _g1++;
				var _this2 = this._eventsCallback;
				var key2 = event.type;
				if((__map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2]).indexOf(events[i]) > -1) {
					events[i](event);
				}
			}
		}
	}
	,__class__: org_tamina_events_EventDispatcher
};
var org_tamina_events_XMLHttpRequestEvent = function() { };
$hxClasses["org.tamina.events.XMLHttpRequestEvent"] = org_tamina_events_XMLHttpRequestEvent;
org_tamina_events_XMLHttpRequestEvent.__name__ = ["org","tamina","events","XMLHttpRequestEvent"];
var org_tamina_events_html_ImageEvent = function() { };
$hxClasses["org.tamina.events.html.ImageEvent"] = org_tamina_events_html_ImageEvent;
org_tamina_events_html_ImageEvent.__name__ = ["org","tamina","events","html","ImageEvent"];
var org_tamina_geom_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["org.tamina.geom.Point"] = org_tamina_geom_Point;
org_tamina_geom_Point.__name__ = ["org","tamina","geom","Point"];
org_tamina_geom_Point.prototype = {
	__class__: org_tamina_geom_Point
};
var org_tamina_geom_Junction = function(x,y,id) {
	if(id == null) {
		id = "";
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	org_tamina_geom_Point.call(this,x,y);
	this.links = [];
	this.id = id;
};
$hxClasses["org.tamina.geom.Junction"] = org_tamina_geom_Junction;
org_tamina_geom_Junction.__name__ = ["org","tamina","geom","Junction"];
org_tamina_geom_Junction.__super__ = org_tamina_geom_Point;
org_tamina_geom_Junction.prototype = $extend(org_tamina_geom_Point.prototype,{
	__class__: org_tamina_geom_Junction
});
var org_tamina_html_component_HTMLComponent = function() {
	this._skinPartsAttached = false;
};
$hxClasses["org.tamina.html.component.HTMLComponent"] = org_tamina_html_component_HTMLComponent;
org_tamina_html_component_HTMLComponent.__name__ = ["org","tamina","html","component","HTMLComponent"];
org_tamina_html_component_HTMLComponent.__super__ = HTMLHtmlElement;
org_tamina_html_component_HTMLComponent.prototype = $extend(HTMLHtmlElement.prototype,{
	createdCallback: function() {
		this.initDefaultValues();
		this.parseContent();
		this.initContent();
		this.displayContent();
		this.updateSkinPartsStatus();
		this.created = true;
		if(this._skinPartsAttached) {
			this.creationCompleteCallback();
		}
	}
	,creationCompleteCallback: function() {
		this.creationComplete = true;
		this.dispatchEvent(org_tamina_html_component_HTMLComponentEventFactory.createEvent("creationComplete",false));
	}
	,attachedCallback: function() {
		if(!this.initialized) {
			this.dispatchEvent(org_tamina_html_component_HTMLComponentEventFactory.createEvent("initialize",false));
		}
		this.initialized = true;
	}
	,detachedCallback: function() {
	}
	,attributeChangedCallback: function(attrName,oldVal,newVal) {
	}
	,initDefaultValues: function() {
		this._visible = true;
		this._useExternalContent = false;
		this._defaultDisplayStyle = "";
	}
	,get_visible: function() {
		return this._visible;
	}
	,set_visible: function(value) {
		this._visible = value;
		if(this._defaultDisplayStyle == "" || this._defaultDisplayStyle == "none" || this._defaultDisplayStyle == null) {
			this._defaultDisplayStyle = this.style.display;
			if(this._defaultDisplayStyle == "" || this._defaultDisplayStyle == "none") {
				this._defaultDisplayStyle = "block";
			}
		}
		if(this._visible) {
			this.style.display = this._defaultDisplayStyle;
		} else {
			this.style.display = "none";
		}
		return this._visible;
	}
	,getContent: function() {
		return this.getView();
	}
	,parseContent: function(useExternalContent) {
		if(useExternalContent == null) {
			useExternalContent = true;
		}
		var content = "";
		if(this.childElementCount == 0 || !useExternalContent) {
			content = this.translateContent(this.getContent());
			this._tempElement = window.document.createElement("div");
		} else {
			this._useExternalContent = true;
			this._tempElement = this;
			content = this.translateContent(this.innerHTML);
		}
		this._tempElement.innerHTML = content;
		var children = this._tempElement.getElementsByTagName("*");
		var _g = 0;
		while(_g < children.length) {
			var child = children[_g];
			++_g;
			if(!Object.prototype.hasOwnProperty.call(child,"host")) {
				child["host"] = this;
			}
		}
		this.initSkinParts(this._tempElement);
	}
	,initSkinParts: function(target) {
		var c = js_Boot.getClass(this);
		this._skinParts = [];
		while(c != org_tamina_html_component_HTMLComponent && c != null) {
			var meta = haxe_rtti_Meta.getFields(c);
			var metaFields = Reflect.fields(meta);
			var _g1 = 0;
			var _g = metaFields.length;
			while(_g1 < _g) {
				var i = _g1++;
				var field = Reflect.field(meta,metaFields[i]);
				if(Object.prototype.hasOwnProperty.call(field,"skinpart")) {
					var element = org_tamina_utils_HTMLUtils.getElementByAttribute(target,"data-id",metaFields[i]);
					this[metaFields[i]] = element;
					if(element == null) {
						console.log("skinpart is null: " + metaFields[i] + " from " + this.nodeName);
					}
					this._skinParts.push(element);
				}
			}
			c = Type.getSuperClass(c);
		}
	}
	,updateSkinPartsStatus: function() {
		this._skinPartsWaiting = [];
		var _g = 0;
		var _g1 = this._skinParts;
		while(_g < _g1.length) {
			var skinPart = _g1[_g];
			++_g;
			if(org_tamina_html_component_HTMLApplication.isCustomElement(skinPart.nodeName) && skinPart.initialized != true) {
				this._skinPartsWaiting.push(skinPart);
			}
		}
		this._skinPartsAttached = this._skinPartsWaiting.length == 0;
		if(!this._skinPartsAttached) {
			var _g2 = 0;
			var _g11 = this._skinPartsWaiting;
			while(_g2 < _g11.length) {
				var skinPart1 = _g11[_g2];
				++_g2;
				skinPart1.addEventListener("initialize",(function(a1,f) {
					return function() {
						f[0](a1[0]);
					};
				})([skinPart1],[$bind(this,this.skinPartReadyHandler)]));
			}
		}
	}
	,skinPartReadyHandler: function(skinPart) {
		HxOverrides.remove(this._skinPartsWaiting,skinPart);
		this._skinPartsAttached = this._skinPartsWaiting.length == 0;
		if(!this.creationComplete && this._skinPartsAttached) {
			this.creationCompleteCallback();
		}
	}
	,translateContent: function(source) {
		var content = source;
		var stringToTranslate = new RegExp("\\{\\{(?!\\}\\})(.+)\\}\\}","gim");
		var results = [];
		var result = [];
		var i = 0;
		while(true) {
			result = stringToTranslate.exec(content);
			if(!(result != null)) {
				break;
			}
			results[i] = result;
			++i;
		}
		result = [];
		var _g = 0;
		while(_g < results.length) {
			var result1 = results[_g];
			++_g;
			var totalString = result1[0];
			var key = StringTools.trim(result1[1]);
			content = StringTools.replace(content,totalString,org_tamina_i18n_LocalizationManager.get_instance().getString(key));
		}
		return content;
	}
	,initContent: function() {
	}
	,displayContent: function() {
		var numChildren = this._tempElement.children.length;
		if(!this._useExternalContent) {
			while(numChildren > 0) {
				--numChildren;
				var item = this._tempElement.children.item(0);
				this.appendChild(item);
			}
		}
	}
	,__class__: org_tamina_html_component_HTMLComponent
});
var org_tamina_html_component_HTMLComponentEventFactory = function() { };
$hxClasses["org.tamina.html.component.HTMLComponentEventFactory"] = org_tamina_html_component_HTMLComponentEventFactory;
org_tamina_html_component_HTMLComponentEventFactory.__name__ = ["org","tamina","html","component","HTMLComponentEventFactory"];
org_tamina_html_component_HTMLComponentEventFactory.createEvent = function(type,bubbles) {
	if(bubbles == null) {
		bubbles = true;
	}
	var result = window.document.createEvent("Event");
	result.initEvent(type,bubbles,true);
	return result;
};
var org_tamina_i18n_ITranslation = function() { };
$hxClasses["org.tamina.i18n.ITranslation"] = org_tamina_i18n_ITranslation;
org_tamina_i18n_ITranslation.__name__ = ["org","tamina","i18n","ITranslation"];
org_tamina_i18n_ITranslation.prototype = {
	__class__: org_tamina_i18n_ITranslation
};
var org_tamina_i18n_LocalizationManager = function() {
	this._translations = new haxe_ds_StringMap();
};
$hxClasses["org.tamina.i18n.LocalizationManager"] = org_tamina_i18n_LocalizationManager;
org_tamina_i18n_LocalizationManager.__name__ = ["org","tamina","i18n","LocalizationManager"];
org_tamina_i18n_LocalizationManager.add = function(manager) {
	org_tamina_i18n_LocalizationManager._instance = manager;
};
org_tamina_i18n_LocalizationManager.get_instance = function() {
	if(org_tamina_i18n_LocalizationManager._instance == null) {
		org_tamina_i18n_LocalizationManager._instance = new org_tamina_i18n_LocalizationManager();
	}
	return org_tamina_i18n_LocalizationManager._instance;
};
org_tamina_i18n_LocalizationManager.prototype = {
	setTranslations: function(translations) {
		var _g = 0;
		while(_g < translations.length) {
			var translation = translations[_g];
			++_g;
			var _this = this._translations;
			var key = translation.fieldName;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,translation);
			} else {
				_this.h[key] = translation;
			}
		}
	}
	,getString: function(key) {
		var result = "";
		var _this = this._translations;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this._translations;
			result = (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).value;
		}
		return result;
	}
	,__class__: org_tamina_i18n_LocalizationManager
};
var org_tamina_io_ImageLoader = function(toDataURL) {
	if(toDataURL == null) {
		toDataURL = true;
	}
	this._image = new Image();
	this._image.crossOrigin = "anonymous";
};
$hxClasses["org.tamina.io.ImageLoader"] = org_tamina_io_ImageLoader;
org_tamina_io_ImageLoader.__name__ = ["org","tamina","io","ImageLoader"];
org_tamina_io_ImageLoader.prototype = {
	get_image: function() {
		return this._image;
	}
	,get_dataURL: function() {
		var result = "";
		if(this._image != null) {
			result = this._image.src;
		}
		return result;
	}
	,load: function(url) {
		this._url = url;
		this._image.addEventListener("load",$bind(this,this.imageLoadHandler),false);
		this._image.addEventListener("error",$bind(this,this.imageLoadErrorHandler),false);
		return new Promise($bind(this,this.start));
	}
	,start: function(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		this._image.src = this._url.path;
	}
	,imageLoadErrorHandler: function(event) {
		this._image.removeEventListener("load",$bind(this,this.imageLoadHandler));
		this._image.removeEventListener("error",$bind(this,this.imageLoadErrorHandler));
		this._reject(new Error("Error while loading : " + this._url.path));
	}
	,imageLoadHandler: function(event) {
		this._image.removeEventListener("load",$bind(this,this.imageLoadHandler));
		this._image.removeEventListener("error",$bind(this,this.imageLoadErrorHandler));
		if(this._toDataURL) {
			var canvas = window.document.createElement("canvas");
			canvas.width = this._image.width;
			canvas.height = this._image.height;
			var ctx = canvas.getContext("2d",null);
			ctx.drawImage(this._image,0,0,this._image.width,this._image.height);
			var outputImage = new Image();
			outputImage.src = canvas.toDataURL();
			this._resolve(outputImage);
		} else {
			this._resolve(this._image);
		}
	}
	,__class__: org_tamina_io_ImageLoader
};
var org_tamina_log__$LogLevel_LogLevel_$Impl_$ = {};
$hxClasses["org.tamina.log._LogLevel.LogLevel_Impl_"] = org_tamina_log__$LogLevel_LogLevel_$Impl_$;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.__name__ = ["org","tamina","log","_LogLevel","LogLevel_Impl_"];
org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual = function(this1,target) {
	return this1 <= target;
};
var org_tamina_log_QuickLogger = function() { };
$hxClasses["org.tamina.log.QuickLogger"] = org_tamina_log_QuickLogger;
org_tamina_log_QuickLogger.__name__ = ["org","tamina","log","QuickLogger"];
org_tamina_log_QuickLogger.info = function(message,source) {
	if(org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual(org_tamina_log_QuickLogger.level,0)) {
		org_tamina_log_QuickLogger.log(0,message);
	}
};
org_tamina_log_QuickLogger.debug = function(message,source) {
	if(org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual(org_tamina_log_QuickLogger.level,1)) {
		org_tamina_log_QuickLogger.log(1,message);
	}
};
org_tamina_log_QuickLogger.warn = function(message,source) {
	if(org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual(org_tamina_log_QuickLogger.level,2)) {
		org_tamina_log_QuickLogger.log(2,message);
	}
};
org_tamina_log_QuickLogger.error = function(message,source) {
	if(org_tamina_log__$LogLevel_LogLevel_$Impl_$.compareMinusOrEqual(org_tamina_log_QuickLogger.level,3)) {
		org_tamina_log_QuickLogger.log(3,message);
	}
};
org_tamina_log_QuickLogger.profile = function(start) {
	if(start == null) {
		start = false;
	}
	if(org_tamina_log_QuickLogger._startProfilingDate != null && !start) {
		org_tamina_log_QuickLogger.debug("profling result : " + (new Date().getTime() - org_tamina_log_QuickLogger._startProfilingDate.getTime()) + " ms");
	}
	org_tamina_log_QuickLogger._startProfilingDate = new Date();
};
org_tamina_log_QuickLogger.log = function(level,message) {
	var prefix = HxOverrides.dateStr(new Date());
	var $console = window.console;
	switch(level) {
	case 0:
		$console.info(prefix + " [INFO] " + message);
		break;
	case 1:
		$console.debug(prefix + " [DEBUG] " + message);
		break;
	case 2:
		$console.warn(prefix + " [WARN] " + message);
		break;
	case 3:
		$console.error(prefix + " [ERROR] " + message);
		break;
	case 4:
		$console.log(prefix + " [NONE] " + message);
		break;
	}
};
var org_tamina_net_AssetCompositeLoader = function() {
	this._pool = [];
	this._errors = [];
};
$hxClasses["org.tamina.net.AssetCompositeLoader"] = org_tamina_net_AssetCompositeLoader;
org_tamina_net_AssetCompositeLoader.__name__ = ["org","tamina","net","AssetCompositeLoader"];
org_tamina_net_AssetCompositeLoader.prototype = {
	add: function(group) {
		this._pool.push(group);
	}
	,start: function() {
		return new Promise($bind(this,this.loadNextGroup));
	}
	,loadNextGroup: function(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		if(this._pool.length > 0) {
			var g = this._pool.shift();
			if(g.loadingType == "sequence") {
				var loader = new org_tamina_net_AssetsSequenceLoader();
				loader.load(g.toArray()).then($bind(this,this.assetCompleteHandler))["catch"]($bind(this,this.assetErrorHandler));
			} else {
				var loader1 = new org_tamina_net_AssetParallelLoader();
				loader1.load(g.toArray()).then($bind(this,this.assetCompleteHandler))["catch"]($bind(this,this.assetErrorHandler));
			}
		} else if(this._errors.length == 0) {
			org_tamina_log_QuickLogger.info("ALL ASSETS LOADED");
			this._resolve(true);
		} else {
			this._reject(this._errors);
		}
	}
	,assetCompleteHandler: function(value) {
		this.loadNextGroup(this._resolve,this._reject);
	}
	,assetErrorHandler: function(errors) {
		this._errors = this._errors.concat(errors);
		this.loadNextGroup(this._resolve,this._reject);
	}
	,__class__: org_tamina_net_AssetCompositeLoader
};
var org_tamina_net_AssetLoader = function() {
	this._cache = new org_tamina_net_AssetLoaderCache();
};
$hxClasses["org.tamina.net.AssetLoader"] = org_tamina_net_AssetLoader;
org_tamina_net_AssetLoader.__name__ = ["org","tamina","net","AssetLoader"];
org_tamina_net_AssetLoader.prototype = {
	load: function(url) {
		this._url = url;
		this._asset = this._cache.getLoadingAsset(this._url);
		return new Promise($bind(this,this.loadPromise));
	}
	,loadPromise: function(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		if(this._cache.isLoaded(this._url)) {
			org_tamina_log_QuickLogger.info("Asset already loaded : " + this._url.get_documentName());
			this.loadCompleteHandler();
		} else if(this._asset != null) {
			org_tamina_log_QuickLogger.info("Loading asset : " + this._url.get_documentName());
			this._asset.addEventListener("load",$bind(this,this.loadCompleteHandler));
			this._asset.addEventListener("error",$bind(this,this.loadErrorHandler));
		} else {
			org_tamina_log_QuickLogger.info("Loading " + this._url.path);
			var tagName = "script";
			if(this._url.assetType == "css") {
				tagName = "link";
			}
			this._asset = window.document.createElement(tagName);
			this._asset.addEventListener("load",$bind(this,this.loadCompleteHandler));
			this._asset.addEventListener("error",$bind(this,this.loadErrorHandler));
			this._cache.addLoadingAsset(this._asset);
			var _g = this._url.assetType;
			switch(_g) {
			case "css":
				var link = this._asset;
				link.type = "text/css";
				link.rel = "stylesheet";
				link.href = this._url.path;
				break;
			case "js":
				var script = this._asset;
				script.type = "text/javascript";
				script.src = this._url.path;
				break;
			}
			this._header = window.document.getElementsByTagName("head")[0];
			this._header.appendChild(this._asset);
		}
	}
	,loadCompleteHandler: function(event) {
		org_tamina_log_QuickLogger.info("asset loaded");
		this._cache.addLoadedAsset(this._url);
		this._cache.removeLoadingAsset(this._asset);
		this._resolve(true);
	}
	,loadErrorHandler: function(event) {
		this._cache.removeLoadingAsset(this._asset);
		this._reject(new Error("Error while loading " + this._url.path));
	}
	,__class__: org_tamina_net_AssetLoader
};
var org_tamina_net_AssetLoaderCache = function() {
	if(this.get__cache() == null) {
		this.set__cache(new org_tamina_net__$AssetLoaderCache_Cache());
	}
};
$hxClasses["org.tamina.net.AssetLoaderCache"] = org_tamina_net_AssetLoaderCache;
org_tamina_net_AssetLoaderCache.__name__ = ["org","tamina","net","AssetLoaderCache"];
org_tamina_net_AssetLoaderCache.prototype = {
	getLoadingAsset: function(url) {
		var result = null;
		var _g1 = 0;
		var _g = this.get__cache().assetsLoading.length;
		try {
			while(_g1 < _g) {
				var i = _g1++;
				var asset = this.get__cache().assetsLoading[i];
				var _g2 = url.assetType;
				switch(_g2) {
				case "css":
					var link = asset;
					if(link.href == url.path) {
						result = asset;
						throw "__break__";
					}
					break;
				case "js":
					var script = asset;
					if(script.src == url.path) {
						result = asset;
						throw "__break__";
					}
					break;
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		return result;
	}
	,isLoaded: function(assetUrl) {
		return this.get__cache().assetsLoaded.indexOf(assetUrl.path) >= 0;
	}
	,addLoadedAsset: function(assetUrl) {
		this.get__cache().assetsLoaded.push(assetUrl.path);
	}
	,addLoadingAsset: function(asset) {
		this.get__cache().assetsLoading.push(asset);
	}
	,removeLoadingAsset: function(asset) {
		HxOverrides.remove(this.get__cache().assetsLoading,asset);
	}
	,set__cache: function(value) {
		window["assetLoaderCache"] = value;
		return null;
	}
	,get__cache: function() {
		return Reflect.field(window,"assetLoaderCache");
	}
	,__class__: org_tamina_net_AssetLoaderCache
};
var org_tamina_net__$AssetLoaderCache_Cache = function() {
	this.assetsLoaded = [];
	this.assetsLoading = [];
};
$hxClasses["org.tamina.net._AssetLoaderCache.Cache"] = org_tamina_net__$AssetLoaderCache_Cache;
org_tamina_net__$AssetLoaderCache_Cache.__name__ = ["org","tamina","net","_AssetLoaderCache","Cache"];
org_tamina_net__$AssetLoaderCache_Cache.prototype = {
	__class__: org_tamina_net__$AssetLoaderCache_Cache
};
var org_tamina_net_BaseAssetsLoader = function() {
	this._pool = [];
	this._loader = new org_tamina_net_AssetLoader();
	this._errors = [];
};
$hxClasses["org.tamina.net.BaseAssetsLoader"] = org_tamina_net_BaseAssetsLoader;
org_tamina_net_BaseAssetsLoader.__name__ = ["org","tamina","net","BaseAssetsLoader"];
org_tamina_net_BaseAssetsLoader.prototype = {
	load: function(assets) {
		this._pool = assets;
		return null;
	}
	,end: function() {
		if(this._errors.length == 0) {
			this._resolve(true);
		} else {
			this._reject(this._errors);
		}
	}
	,__class__: org_tamina_net_BaseAssetsLoader
};
var org_tamina_net_AssetParallelLoader = function() {
	this._remainingAssetNumber = 0;
	org_tamina_net_BaseAssetsLoader.call(this);
};
$hxClasses["org.tamina.net.AssetParallelLoader"] = org_tamina_net_AssetParallelLoader;
org_tamina_net_AssetParallelLoader.__name__ = ["org","tamina","net","AssetParallelLoader"];
org_tamina_net_AssetParallelLoader.__super__ = org_tamina_net_BaseAssetsLoader;
org_tamina_net_AssetParallelLoader.prototype = $extend(org_tamina_net_BaseAssetsLoader.prototype,{
	load: function(assets) {
		this._pool = assets;
		this._remainingAssetNumber = this._pool.length;
		return new Promise($bind(this,this.start));
	}
	,start: function(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		var _g1 = 0;
		var _g = this._pool.length;
		while(_g1 < _g) {
			var i = _g1++;
			var l = new org_tamina_net_AssetLoader();
			l.load(this._pool[i]).then($bind(this,this.assetCompleteHandler))["catch"]($bind(this,this.assetErrorHandler));
		}
	}
	,assetCompleteHandler: function(value) {
		this._remainingAssetNumber--;
		if(this._remainingAssetNumber == 0) {
			this.end();
		}
	}
	,assetErrorHandler: function(error) {
		org_tamina_log_QuickLogger.error("error while loading asset");
		this._remainingAssetNumber--;
		this._errors.push(error);
		if(this._remainingAssetNumber == 0) {
			this.end();
		}
	}
	,__class__: org_tamina_net_AssetParallelLoader
});
var org_tamina_net_URL = function(path) {
	if(path == null) {
		path = "";
	}
	this.path = path;
	this._parameters = new haxe_ds_StringMap();
	if(path.lastIndexOf("?") > 0) {
		var params = path.substring(path.lastIndexOf("?") + 1);
		var elements = params.split("&");
		var _g1 = 0;
		var _g = elements.length;
		while(_g1 < _g) {
			var i = _g1++;
			var element = elements[i].split("=");
			var _this = this._parameters;
			var key = element[0];
			var value = element[1];
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		}
	}
};
$hxClasses["org.tamina.net.URL"] = org_tamina_net_URL;
org_tamina_net_URL.__name__ = ["org","tamina","net","URL"];
org_tamina_net_URL.prototype = {
	get_scheme: function() {
		var result = "";
		if(this.path.indexOf(":") > 0) {
			result = this.path.substring(0,this.path.indexOf(":"));
		}
		return result;
	}
	,get_parameters: function() {
		return this._parameters;
	}
	,get_extension: function() {
		var result = "";
		var pathWithoutParams = this.path;
		if(this.path.indexOf("?") > -1) {
			pathWithoutParams = this.path.substring(0,this.path.indexOf("?"));
		}
		var extensionSize = pathWithoutParams.length - pathWithoutParams.lastIndexOf(".") - 1;
		if(extensionSize >= 2 && extensionSize <= 4) {
			result = pathWithoutParams.substring(pathWithoutParams.length - extensionSize);
		}
		return result;
	}
	,get_documentName: function() {
		var result = "";
		if(this.path != null) {
			result = this.path.substring(this.path.lastIndexOf("/") + 1);
		}
		return result;
	}
	,toString: function() {
		return this.path;
	}
	,removeParameter: function(key) {
		var rtn = this.path;
		if(this.path.indexOf("?") != -1) {
			rtn = this.path.split("?")[0];
			var param;
			var params_arr = [];
			var queryString = this.path.indexOf("?") != -1 ? this.path.split("?")[1] : "";
			if(queryString != "") {
				params_arr = queryString.split("&");
				var i = params_arr.length - 1;
				while(i >= 0) {
					param = params_arr[i].split("=")[0];
					if(param == key) {
						params_arr.splice(i,1);
					}
					--i;
				}
				rtn = rtn + "?" + params_arr.join("&");
			}
		}
		this.path = rtn;
	}
	,__class__: org_tamina_net_URL
};
var org_tamina_net_AssetURL = function(path,assetType) {
	if(assetType == null) {
		assetType = "js";
	}
	org_tamina_net_URL.call(this,path);
	this.assetType = assetType;
};
$hxClasses["org.tamina.net.AssetURL"] = org_tamina_net_AssetURL;
org_tamina_net_AssetURL.__name__ = ["org","tamina","net","AssetURL"];
org_tamina_net_AssetURL.__super__ = org_tamina_net_URL;
org_tamina_net_AssetURL.prototype = $extend(org_tamina_net_URL.prototype,{
	__class__: org_tamina_net_AssetURL
});
var org_tamina_net_AssetsSequenceLoader = function() {
	org_tamina_net_BaseAssetsLoader.call(this);
};
$hxClasses["org.tamina.net.AssetsSequenceLoader"] = org_tamina_net_AssetsSequenceLoader;
org_tamina_net_AssetsSequenceLoader.__name__ = ["org","tamina","net","AssetsSequenceLoader"];
org_tamina_net_AssetsSequenceLoader.__super__ = org_tamina_net_BaseAssetsLoader;
org_tamina_net_AssetsSequenceLoader.prototype = $extend(org_tamina_net_BaseAssetsLoader.prototype,{
	load: function(assets) {
		this._pool = assets;
		return new Promise($bind(this,this.loadNextAsset));
	}
	,assetCompleteHandler: function(value) {
		this.loadNextAsset(this._resolve,this._reject);
	}
	,assetErrorHandler: function(error) {
		this._errors.push(error);
		this.loadNextAsset(this._resolve,this._reject);
	}
	,loadNextAsset: function(resolve,reject) {
		this._resolve = resolve;
		this._reject = reject;
		if(this._pool.length > 0) {
			this._loader.load(this._pool.shift()).then($bind(this,this.assetCompleteHandler))["catch"]($bind(this,this.assetErrorHandler));
		} else {
			this.end();
		}
	}
	,__class__: org_tamina_net_AssetsSequenceLoader
});
var org_tamina_net_GroupURL = function(type,cacheKiller) {
	if(type == null) {
		type = "sequence";
	}
	this.loadingType = type;
	this._pool = [];
	this._cacheKiller = cacheKiller;
};
$hxClasses["org.tamina.net.GroupURL"] = org_tamina_net_GroupURL;
org_tamina_net_GroupURL.__name__ = ["org","tamina","net","GroupURL"];
org_tamina_net_GroupURL.prototype = {
	add: function(url,assetType) {
		if(assetType == null) {
			assetType = "js";
		}
		var assetURL = new org_tamina_net_AssetURL(url.path,assetType);
		this._pool.push(assetURL);
	}
	,toArray: function() {
		var result = [];
		var _g1 = 0;
		var _g = this._pool.length;
		while(_g1 < _g) {
			var i = _g1++;
			var path = this._pool[i].path;
			if(this._cacheKiller != null) {
				path += "?cacheKiller=" + Std.string(this._cacheKiller());
			}
			var assetURL = new org_tamina_net_AssetURL(path);
			assetURL.assetType = this._pool[i].assetType;
			result.push(assetURL);
		}
		return result;
	}
	,__class__: org_tamina_net_GroupURL
};
var org_tamina_net_XMLLoader = function() {
	this._configLoader = new XMLHttpRequest();
	try {
		this._configLoader.overrideMimeType("text/xml");
	} catch( e ) {
		org_tamina_log_QuickLogger.warn("overrideMimeType not supported");
	}
	try {
		this._configLoader.responseType = "document";
	} catch( e1 ) {
		org_tamina_log_QuickLogger.warn("responseType not supported");
	}
};
$hxClasses["org.tamina.net.XMLLoader"] = org_tamina_net_XMLLoader;
org_tamina_net_XMLLoader.__name__ = ["org","tamina","net","XMLLoader"];
org_tamina_net_XMLLoader.prototype = {
	load: function(url) {
		this._url = url;
		return new Promise($bind(this,this.start));
	}
	,start: function(resolve,reject) {
		var _gthis = this;
		this._configLoader.addEventListener("load",function(event) {
			_gthis._configDocument = _gthis._configLoader.responseXML;
			resolve(_gthis._configDocument);
		});
		this._configLoader.addEventListener("error",function(error) {
			reject(error);
		});
		this._configLoader.open("GET",this._url.path,true);
		this._configLoader.send(null);
	}
	,__class__: org_tamina_net_XMLLoader
};
var org_tamina_utils_ClassUtils = function() { };
$hxClasses["org.tamina.utils.ClassUtils"] = org_tamina_utils_ClassUtils;
org_tamina_utils_ClassUtils.__name__ = ["org","tamina","utils","ClassUtils"];
org_tamina_utils_ClassUtils.expose = function(instance,rootInstanceName) {
	window[rootInstanceName] = instance;
};
var org_tamina_utils_ColorUtils = function() { };
$hxClasses["org.tamina.utils.ColorUtils"] = org_tamina_utils_ColorUtils;
org_tamina_utils_ColorUtils.__name__ = ["org","tamina","utils","ColorUtils"];
org_tamina_utils_ColorUtils.decColor2hex = function(color) {
	return "#000000";
};
org_tamina_utils_ColorUtils.invert = function(color) {
	if(color.length != 7) {
		throw new Error("Hex color must be six hex numbers in length.");
	}
	var hexnum = HxOverrides.substr(color.toUpperCase(),1,null);
	var splitnum = hexnum.split("");
	var resultnum = "";
	var simplenum = "FEDCBA9876".split("");
	var complexnum = { };
	complexnum.A = "5";
	complexnum.B = "4";
	complexnum.C = "3";
	complexnum.D = "2";
	complexnum.E = "1";
	complexnum.F = "0";
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		if(!isNaN(splitnum[i])) {
			resultnum += simplenum[splitnum[i]];
		} else if(complexnum[splitnum[i]]) {
			resultnum += complexnum[splitnum[i]];
		} else {
			throw new Error("Hex colors must only include hex numbers 0-9, and A-F");
		}
	}
	return "#" + resultnum;
};
var org_tamina_utils_DateUtils = function() { };
$hxClasses["org.tamina.utils.DateUtils"] = org_tamina_utils_DateUtils;
org_tamina_utils_DateUtils.__name__ = ["org","tamina","utils","DateUtils"];
org_tamina_utils_DateUtils.hourToFrenchString = function(pDate) {
	var result = "";
	var hours = Std.string(pDate.getHours());
	if(pDate.getHours() < 10) {
		hours = "0" + hours;
	}
	var minutes = Std.string(pDate.getMinutes());
	if(pDate.getMinutes() < 10) {
		minutes = "0" + minutes;
	}
	result = hours + "h" + minutes;
	return result;
};
org_tamina_utils_DateUtils.toFrenchString = function(pDate) {
	var month = Std.string(pDate.getMonth() + 1);
	if(pDate.getMonth() < 9) {
		month = "0" + month;
	}
	var day = Std.string(pDate.getDate());
	if(pDate.getDate() < 10) {
		day = "0" + day;
	}
	return day + "/" + month + "/" + pDate.getFullYear();
};
var org_tamina_utils_HTMLUtils = function() { };
$hxClasses["org.tamina.utils.HTMLUtils"] = org_tamina_utils_HTMLUtils;
org_tamina_utils_HTMLUtils.__name__ = ["org","tamina","utils","HTMLUtils"];
org_tamina_utils_HTMLUtils.getElementById = function(parent,id) {
	var result = null;
	if(parent.children != null) {
		var _g1 = 0;
		var _g = parent.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			var el = parent.children.item(i);
			var elId = org_tamina_utils_HTMLUtils.getAttribute(el,"id");
			if(elId == id) {
				result = el;
				break;
			} else {
				result = org_tamina_utils_HTMLUtils.getElementById(el,id);
			}
		}
	}
	return result;
};
org_tamina_utils_HTMLUtils.getElementByAttribute = function(parent,attribute,value) {
	var result = null;
	if(parent.children != null) {
		var _g1 = 0;
		var _g = parent.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(result == null) {
				var el = parent.children.item(i);
				var elId = org_tamina_utils_HTMLUtils.getAttribute(el,attribute);
				if(elId == value) {
					result = el;
					return result;
				} else {
					result = org_tamina_utils_HTMLUtils.getElementByAttribute(el,attribute,value);
				}
			} else {
				return result;
			}
		}
	}
	return result;
};
org_tamina_utils_HTMLUtils.getAttribute = function(element,name) {
	var result = "";
	var _g1 = 0;
	var _g = element.attributes.length;
	while(_g1 < _g) {
		var i = _g1++;
		var att = element.attributes.item(i);
		if(att.name == name) {
			result = att.value;
			break;
		}
	}
	return result;
};
org_tamina_utils_HTMLUtils.getEventPath = function(event) {
	var result = [];
	if(event.target != null && js_Boot.__instanceof(event.target,HTMLElement)) {
		result = org_tamina_utils_HTMLUtils.recursivelyFindParent(event.target);
	}
	return result;
};
org_tamina_utils_HTMLUtils.recursivelyFindParent = function(element) {
	var result = [];
	result.push(element);
	if(element.nodeName.toLowerCase() != "body" && element.parentNode != null) {
		result = result.concat(org_tamina_utils_HTMLUtils.recursivelyFindParent(element.parentNode));
	}
	return result;
};
org_tamina_utils_HTMLUtils.findParent = function(element,doesMatch,maxLevel,currLevel) {
	if(currLevel == null) {
		currLevel = 0;
	}
	if(maxLevel == null) {
		maxLevel = 10;
	}
	if(doesMatch(element)) {
		return element;
	}
	if(doesMatch(element.parentElement)) {
		return element.parentElement;
	}
	if(++currLevel < maxLevel) {
		return org_tamina_utils_HTMLUtils.findParent(element.parentElement,doesMatch,maxLevel,currLevel);
	}
	return null;
};
org_tamina_utils_HTMLUtils.removeElement = function(element) {
	var result = true;
	if($bind(element,element.remove) != null) {
		element.remove();
	} else if(element.parentElement != null && element.parentElement.contains(element)) {
		element.parentElement.removeChild(element);
	} else {
		result = false;
	}
	return result;
};
org_tamina_utils_HTMLUtils.getElementOffset = function(element) {
	var result = { top : 0, left : 0};
	var rect = element.getBoundingClientRect();
	var body = window.document.body;
	var win = window;
	result.top = Math.round(rect.top + win.pageYOffset - element.clientTop);
	result.left = Math.round(rect.left + win.pageXOffset - element.clientLeft);
	return result;
};
org_tamina_utils_HTMLUtils.getTouchPosition = function(element,evt) {
	var offset = org_tamina_utils_HTMLUtils.getElementOffset(element);
	var touch = evt.touches.item(0);
	return new org_tamina_geom_Point(touch.pageX - offset.left,touch.pageY - offset.top);
};
org_tamina_utils_HTMLUtils.isTouchSupported = function() {
	var result = !!(('ontouchstart' in window)
            || (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0)
            || (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0));
	return result;
};
org_tamina_utils_HTMLUtils.getBrowserType = function(agent) {
	if(agent == null) {
		agent = window.navigator.userAgent;
	}
	var result = org_tamina_utils_BrowserType.Unknown;
	if(new EReg("WebKit","").match(agent)) {
		if(new EReg("Chrome","").match(agent)) {
			result = org_tamina_utils_BrowserType.Chrome;
			var isAndroid = agent.indexOf("Mozilla/5.0") > -1 && agent.indexOf("Android ") > -1 && agent.indexOf("AppleWebKit") > -1;
			if(isAndroid) {
				result = org_tamina_utils_BrowserType.Android;
			}
		} else if(new EReg("Safari","").match(agent)) {
			result = org_tamina_utils_BrowserType.Safari;
		} else {
			result = org_tamina_utils_BrowserType.Opera;
		}
	} else if(new EReg("Opera","").match(agent)) {
		result = org_tamina_utils_BrowserType.Opera;
	} else if(new EReg("Mozilla","").match(agent)) {
		var isIE = agent.indexOf("MSIE ") > -1 || agent.indexOf("Trident/") > -1 || agent.indexOf("Edge/") > -1;
		var isAndroid1 = agent.indexOf("Mozilla/5.0") > -1 && agent.indexOf("Android ") > -1 && agent.indexOf("AppleWebKit") > -1;
		if(isIE) {
			result = org_tamina_utils_BrowserType.IE;
		} else if(isAndroid1) {
			result = org_tamina_utils_BrowserType.Android;
		} else {
			result = org_tamina_utils_BrowserType.FireFox;
		}
	} else {
		result = org_tamina_utils_BrowserType.IE;
	}
	return result;
};
org_tamina_utils_HTMLUtils.getIEVersion = function(ua) {
	if(ua == null) {
		ua = window.navigator.userAgent;
	}
	var ieRegex = new EReg("MSIE\\s([0-9]+)","");
	var tridentRegex = new EReg("Trident/.*rv:([0-9]+)","");
	var edgeRegex = new EReg("Edge/([0-9]+)","");
	var regexArray = [ieRegex,tridentRegex,edgeRegex];
	var _g = 0;
	while(_g < regexArray.length) {
		var regex = regexArray[_g];
		++_g;
		if(regex.match(ua)) {
			return Std.parseInt(regex.matched(1));
		}
	}
	return -1;
};
org_tamina_utils_HTMLUtils.getChromeVersion = function(ua) {
	if(ua == null) {
		ua = window.navigator.userAgent;
	}
	var chromeRegex = new EReg("Chrome/([0-9]+)","");
	if(chromeRegex.match(ua)) {
		return Std.parseInt(chromeRegex.matched(1));
	}
	return -1;
};
org_tamina_utils_HTMLUtils.getFirefoxVersion = function(ua) {
	if(ua == null) {
		ua = window.navigator.userAgent;
	}
	var firefoxRegex = new EReg("Firefox/([0-9]+)","");
	if(firefoxRegex.match(ua)) {
		return Std.parseInt(firefoxRegex.matched(1));
	}
	return -1;
};
org_tamina_utils_HTMLUtils.getSafariVersion = function(ua) {
	if(ua == null) {
		ua = window.navigator.userAgent;
	}
	var safariRegex = new EReg("Version/([0-9]+)","");
	if(safariRegex.match(ua)) {
		return Std.parseInt(safariRegex.matched(1));
	}
	return -1;
};
var org_tamina_utils_BrowserType = { __ename__ : true, __constructs__ : ["Chrome","Android","Safari","WebKitOther","FireFox","Opera","IE","Unknown"] };
org_tamina_utils_BrowserType.Chrome = ["Chrome",0];
org_tamina_utils_BrowserType.Chrome.__enum__ = org_tamina_utils_BrowserType;
org_tamina_utils_BrowserType.Android = ["Android",1];
org_tamina_utils_BrowserType.Android.__enum__ = org_tamina_utils_BrowserType;
org_tamina_utils_BrowserType.Safari = ["Safari",2];
org_tamina_utils_BrowserType.Safari.__enum__ = org_tamina_utils_BrowserType;
org_tamina_utils_BrowserType.WebKitOther = ["WebKitOther",3];
org_tamina_utils_BrowserType.WebKitOther.__enum__ = org_tamina_utils_BrowserType;
org_tamina_utils_BrowserType.FireFox = ["FireFox",4];
org_tamina_utils_BrowserType.FireFox.__enum__ = org_tamina_utils_BrowserType;
org_tamina_utils_BrowserType.Opera = ["Opera",5];
org_tamina_utils_BrowserType.Opera.__enum__ = org_tamina_utils_BrowserType;
org_tamina_utils_BrowserType.IE = ["IE",6];
org_tamina_utils_BrowserType.IE.__enum__ = org_tamina_utils_BrowserType;
org_tamina_utils_BrowserType.Unknown = ["Unknown",7];
org_tamina_utils_BrowserType.Unknown.__enum__ = org_tamina_utils_BrowserType;
var org_tamina_utils_NumberUtils = function() { };
$hxClasses["org.tamina.utils.NumberUtils"] = org_tamina_utils_NumberUtils;
org_tamina_utils_NumberUtils.__name__ = ["org","tamina","utils","NumberUtils"];
org_tamina_utils_NumberUtils.toFixed = function(x,decimalPlaces) {
	if(isNaN(x)) {
		return "NaN";
	} else {
		var a = 10;
		var n = decimalPlaces;
		var t = 1;
		var r = 0;
		while(true) {
			if((n & 1) != 0) {
				t = a * t;
			}
			n >>= 1;
			if(n == 0) {
				r = t;
				break;
			} else {
				a *= a;
			}
		}
		var t1 = r;
		var s = Std.string((x * t1 | 0) / t1);
		var i = s.indexOf(".");
		if(i != -1) {
			var _g1 = HxOverrides.substr(s,i + 1,null).length;
			var _g = decimalPlaces;
			while(_g1 < _g) {
				var i1 = _g1++;
				s += "0";
			}
		} else {
			s += ".";
			var _g11 = 0;
			var _g2 = decimalPlaces;
			while(_g11 < _g2) {
				var i2 = _g11++;
				s += "0";
			}
		}
		return s;
	}
};
org_tamina_utils_NumberUtils.roundDec = function(numIn,decimalPlaces) {
	var nExp = Math.pow(10,decimalPlaces);
	var nRetVal = Math.round(numIn * nExp) / nExp;
	return nRetVal;
};
org_tamina_utils_NumberUtils.floorDec = function(numIn,decimalPlaces) {
	var nExp = Math.pow(10,decimalPlaces);
	var nRetVal = Math.floor(numIn * nExp) / nExp;
	return nRetVal;
};
org_tamina_utils_NumberUtils.ceilDec = function(numIn,decimalPlaces) {
	var nExp = Math.pow(10,decimalPlaces);
	var nRetVal = Math.ceil(numIn * nExp) / nExp;
	return nRetVal;
};
org_tamina_utils_NumberUtils.exp = function(a,n) {
	var t = 1;
	var r = 0;
	while(true) {
		if((n & 1) != 0) {
			t = a * t;
		}
		n >>= 1;
		if(n == 0) {
			r = t;
			break;
		} else {
			a *= a;
		}
	}
	return r;
};
var org_tamina_utils_ObjectUtils = function() { };
$hxClasses["org.tamina.utils.ObjectUtils"] = org_tamina_utils_ObjectUtils;
org_tamina_utils_ObjectUtils.__name__ = ["org","tamina","utils","ObjectUtils"];
org_tamina_utils_ObjectUtils.merge = function(fromObject,toObject) {
	var fields = Reflect.fields(fromObject);
	var _g1 = 0;
	var _g = fields.length;
	while(_g1 < _g) {
		var i = _g1++;
		var field = fields[i];
		if(Object.prototype.hasOwnProperty.call(toObject,field)) {
			toObject[field] = Reflect.field(fromObject,field);
		}
	}
};
org_tamina_utils_ObjectUtils.filterById = function(source) {
	return function(obj) {
		return source.id == obj.id;
	};
};
var org_tamina_utils_UID = function() { };
$hxClasses["org.tamina.utils.UID"] = org_tamina_utils_UID;
org_tamina_utils_UID.__name__ = ["org","tamina","utils","UID"];
org_tamina_utils_UID.getUID = function() {
	var result = new Date().getTime();
	if(result <= org_tamina_utils_UID._lastUID) {
		result = org_tamina_utils_UID._lastUID + 1;
	}
	org_tamina_utils_UID._lastUID = result;
	return result;
};
var test_html_view_OtherTestComponent = function() {
	this._myvar = "coucou";
	org_tamina_html_component_HTMLComponent.call(this);
};
$hxClasses["test.html.view.OtherTestComponent"] = test_html_view_OtherTestComponent;
test_html_view_OtherTestComponent.__name__ = ["test","html","view","OtherTestComponent"];
test_html_view_OtherTestComponent.__super__ = org_tamina_html_component_HTMLComponent;
test_html_view_OtherTestComponent.prototype = $extend(org_tamina_html_component_HTMLComponent.prototype,{
	createdCallback: function() {
		org_tamina_html_component_HTMLComponent.prototype.createdCallback.call(this);
		this._myvar = "pouet";
	}
	,displaySomething: function() {
		console.log(this._myvar);
	}
	,getView: function() {
		return "<div>\n    pouet\n    <button onclick=\"this.host.displaySomething()\">go</button>\n</div>";
	}
	,__class__: test_html_view_OtherTestComponent
});
var test_html_view_TestComponent = function() {
	org_tamina_html_component_HTMLComponent.call(this);
};
$hxClasses["test.html.view.TestComponent"] = test_html_view_TestComponent;
test_html_view_TestComponent.__name__ = ["test","html","view","TestComponent"];
test_html_view_TestComponent.__super__ = org_tamina_html_component_HTMLComponent;
test_html_view_TestComponent.prototype = $extend(org_tamina_html_component_HTMLComponent.prototype,{
	attachedCallback: function() {
		this._otherComponent.displaySomething();
		this._rand = Math.random();
	}
	,toto: function() {
		console.log("clicked " + this._rand);
	}
	,getView: function() {
		return "<div>\n    lalalalalaaa\n    <button onclick=\"this.host.toto()\">click me</button>\n</div>\n<test-html-view-othertestcomponent data-id=\"_otherComponent\"></test-html-view-othertestcomponent>";
	}
	,__class__: test_html_view_TestComponent
});
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
js_Boot.__toStr = ({ }).toString;
org_tamina_events_XMLHttpRequestEvent.PROGRESS = "progress";
org_tamina_events_XMLHttpRequestEvent.LOAD = "load";
org_tamina_events_XMLHttpRequestEvent.ERROR = "error";
org_tamina_events_html_ImageEvent.__meta__ = { obj : { deprecated : null}};
org_tamina_events_html_ImageEvent.LOAD = "load";
org_tamina_events_html_ImageEvent.ERROR = "error";
org_tamina_log__$LogLevel_LogLevel_$Impl_$.INFO = 0;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.DEBUG = 1;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.WARN = 2;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.ERROR = 3;
org_tamina_log__$LogLevel_LogLevel_$Impl_$.NONE = 4;
org_tamina_log_QuickLogger.level = 0;
org_tamina_utils_UID._lastUID = 0;
test_html_view_OtherTestComponent.__meta__ = { obj : { view : ["test/html/view/OtherTestComponent.html"]}};
test_html_view_OtherTestComponent.__registered = (function($this) {
	var $r;
	{
		var this1 = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
		var key = "test-html-view-othertestcomponent".toLowerCase();
		var _this = this1;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,"test.html.view.OtherTestComponent");
		} else {
			_this.h[key] = "test.html.view.OtherTestComponent";
		}
	}
	$r = true;
	return $r;
}(this));
test_html_view_TestComponent.__meta__ = { obj : { view : ["test/html/view/TestComponent.html"]}, fields : { _otherComponent : { skinpart : [""]}}};
test_html_view_TestComponent.__registered = (function($this) {
	var $r;
	{
		var this1 = org_tamina_html_component_HTMLApplication.get_componentsXTagList();
		var key = "test-html-view-testcomponent".toLowerCase();
		var _this = this1;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,"test.html.view.TestComponent");
		} else {
			_this.h[key] = "test.html.view.TestComponent";
		}
	}
	$r = true;
	return $r;
}(this));
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
